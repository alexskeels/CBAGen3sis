---
title: "Diversification in a Model Island System"
author: "Alex Skeels and Oskar Hagen"
execute: 
  eval: FALSE
---

This practical uses a theoretical archipelago system. Each site (1x1 km), features temperature (i.e. mean, minimum and maximum temperature) and has a landscape structure that is generated by approximating topography, uplift dynamics, and a lapse rate of temperature with elevation. Additionally, it incorporates global temperature and sea level changes dating back to the past 5 million years (Ma).

You can look at an animation of the landscape [here](https://raw.githubusercontent.com/ohagen/DispDiv3/main/figures/AnimationS1_patch_dynamics.gif). We'll also have a look now.

First make sure our packages are loaded.

```{r}
library(gen3sis)
library(terra)
```

You can look at an animation of the landscape [here](https://raw.githubusercontent.com/ohagen/DispDiv3/main/figures/AnimationS1_patch_dynamics.gif). We'll also have a quick look now.

# Dynamic Island Landscape

```{r}
# load landscapes
lc <- readRDS(file.path("data", "landscapes", "islands","landscapes.rds"))

# get names of landscape variables
names(lc)

# get first time step
first_step_pos <- ncol(lc$mean_temp)

# get first 10 sites of mean temperature for the 2 last time steps and the first (oldest) time step
lc$mean_temp[100:110, c(1:4, first_step_pos)]

# plot mean_temp for first and last time step
plot(rast(lc$mean_temp[ ,c(1:3, first_step_pos)]))
```

Look to see if there are any temporal trends in temperature or elevation.

```{r}
# plot the change in mean tempereature through time
mean_temperatures <- colMeans(lc$mean_temp[, 3:ncol(lc$mean_temp)], na.rm=T)
plot(0:500,mean_temperatures ,  xlab="time", ylab="mean temperature")

# plot the change in mean elevation through time
mean_elevation <- colMeans(lc$elevation[, 3:ncol(lc$elevation)], na.rm=T)
plot(0:500,mean_elevation ,  xlab="time", ylab="mean elevation")
```

# Config Time! - Model 1

load in a the m1 config

```{r}
# load config
conf_m1 <- create_input_config("configs/config_islands_simple_Day1Prac3_M1.R")

# list all main elements of the config file
names(conf_m1$gen3sis)

# list all elements of the general section, i.e. the main settings and not so much on the eco-evolutionary processes
names(conf_m1$gen3sis$general)

# if you're game take a look at the whole thing - whats different to the South America example?
conf
```

Ok now run the sim.

```{r}
# run simulation
sim_m1 <- run_simulation(config = "configs/config_islands_simple_Day1Prac3_M1.R", 
                      landscape = "data/landscapes/islands", 
                      output_directory = "output/islands")
```

Investigate the output

```{r}
sim_m1 <- readRDS("output/islands/config_islands_simple_Day1Prac3_M1/sgen3sis.rds")
```

```{r}
names(sim_m1)

# visualize the outputs
plot_summary(sim_m1)

# plot richness from summary in custom fashion
na_mask <- is.na(lc$elevation[,"0"])
rich_m1 <- sim_m1$summary$`richness-final`
rich_m1[na_mask,3] <- NA
plot(rast(rich_m1, type="xyz"), main="Richness")
```

Pick a couple of random time points to look at specifically.

```{r}
# plot richness at time step 32 using saved data
sps32 <- readRDS("output/islands/config_islands_simple_Day1Prac3_M1/species/species_t_32.rds")
lc32 <- readRDS("output/islands/config_islands_simple_Day1Prac3_M1/landscapes/landscape_t_32.rds")
plot_richness(sps32, lc32)

# plot richness at time step 12 using saved data
sps12 <- readRDS("output/islands/config_islands_simple_Day1Prac3_M1/species/species_t_12.rds")
lc12 <- readRDS("output/islands/config_islands_simple_Day1Prac3_M1/landscapes/landscape_t_12.rds")
plot_richness(sps12, lc12)

```

Now look at the phylogeny

```{r}
# Now lets look at the Phylogeny
library(ape)
phy_m1 <- read.nexus("output/islands/config_islands_simple_Day1Prac3_M1/phy.nex")
plot(phy_m1)
```

# Customize simulations - M2

Lets start changing features of the config and compare the outputs to our first model.

```{r}
# load in config M2

conf_m2 <- create_input_config("configs/config_islands_simple_Day1Prac3_M2.R")

# currently populations need 10 time steps to complete speciation

conf_m1$gen3sis$speciation$divergence_threshold

# now populations only need 5 time steps to complete speciation

conf_m2$gen3sis$speciation$divergence_threshold

#We have also change the observer function to save the presence/absence matrix for each time step.
# see original config
conf_m1$gen3sis$general$end_of_timestep_observer 

# see modeified config
conf_m2$gen3sis$general$end_of_timestep_observer 
```

Run M2

```{r}
# run the new model
sim_m2 <- run_simulation(config="configs/config_islands_simple_Day1Prac3_M2.R", landscape="data/landscapes/islands", output_directory="output/islands")

# From the small tweak to the divergence factor we can see more species being generated

# original dynamics
plot_summary(sim_m1)

# modified dynamics
sim_m2 <- readRDS("output/islands/config_islands_simple_Day1Prac3_M2/sgen3sis.rds")
plot_summary(sim_m2)

```

## Exercise

Review the M2 file and try to understand what it's doing. How are the dynamics different to M1, and how are they similar? Consider how you might modify the configuration or apply it to a specific research question.

# Go cray - Model 3

The differences between M1 and M2 are predictable. Speciation happens a bit faster in M2, and you end up with more species. Overall, however, the patterns of richness are pretty similar. This suggests that this change in the rate of speciation isn't having a big impact on geographic variation in where species are forming (at least from a glance). So let's try a new model that has a few more tweaks to see a more measurable effect.

```{r}
#load in the config for model M3
conf_m3 <- create_input_config("configs/config_islands_simple_Day1Prac3_M3.R")

# take a look at the initialisation
conf_m3$gen3sis$initialization

```

There is a big differences here. In the iniotialisation stage we start with 4 species - one on each island but this time we give each species a different value of it's dispersal ability and temperature width trait (niche breadth), and these are inversely related - high dispersing species have narrow niche breadths and low dispering species have wide niche breadths. This may create an interesting tradeoff in dynamics of island colonization.

The evolution (mutation) function is also different. Here instead of a process of homogenization followed by random drift, we are implementing zn approximation of an Ornstein-Uhlenbeck model of trait evolution. This is model where traits of each geographic cluster evolution towards the optimal value for the trait based on what the average temperature is across the population's range. Basically, its a more adaptive model than before.

Run the simulation

```{r}
sim_m3 <- run_simulation(config="configs/config_islands_simple_Day1Prac3_M3.R", 
                         landscape="data/landscapes/islands",
                         output_directory="output/islands")

```

Now compare the dynamics

```{r}
sim_m3 <- readRDS("output/islands/config_islands_simple_Day1Prac3_M3/sgen3sis.rds")

# compare the plot summaries
plot_summary(sim_m1)
plot_summary(sim_m2)
plot_summary(sim_m3)

# lets also compare the phylogenies
phy_m1 <- read.nexus("output/islands/config_islands_simple_Day1Prac3_M1/phy.nex")
plot(phy_m1)
phy_m2 <- read.nexus("output/islands/config_islands_simple_Day1Prac3_M2/phy.nex")
plot(phy_m2)
phy_m3 <- read.nexus("output/islands/config_islands_simple_Day1Prac3_M3/phy.nex")
plot(phy_m3)
```
