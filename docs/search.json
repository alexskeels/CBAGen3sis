[
  {
    "objectID": "program.html",
    "href": "program.html",
    "title": "1  Program",
    "section": "",
    "text": "Day 1.\n\n9:00 - Welcome (Platypus Room) - Introductions and Overview of Gen3sis Workshop\n9:45 - Lecture 1. Oskar Hagen (Eucalyptus Room) - History and philosophy of simulation modelling in biodiversity studies\n10:45 - Coffee Break\n11:00 - Practical 1. Installation and Set Up (30mins - 1hr)\n12pm - Practical 2. Gen3sis Config Basics\n12:00 - Lunch Break\n1:30 - Practical 2. Gen3sis Config Basics (continue - 2hrs)\n15:30 - Coffee Break\n15:45pm - Practical 3. Explore island configs\n16:30 - Questions / Wrap up Day 1\n\n\n\nDay. 2\n\n9am - Lecture 2. Alex and Oskar - Inference from biodiversity data\n10:00 - Practical 4.1. Gen3sis outputs and biodiversity patterns\n10:30 - Coffee Break\n10:45 - Practical 4.2 Gen3sis outputs and biodiversity patterns (contd.)\n12:30 - lunch\n13:30 - Lecture 3. Tristan Salles – Paleoenvironmental models and data\n14:15 - Discussion\n14:45 - Coffee break\n15:00 - Practical 5. Modifying landscapes for Gen3sis\n16:30 - Questions / Wrap up Day 2\n\n\n\nDay 3.\n\n09:00 - Lecture 4. Alex and Oskar - Designing simulation experiments with Gen3sis\n10:00 Group work - implementing models in Gen3sis\n10:30 - Coffee Break\n10:45 - Group work - implementing models in Gen3sis (contd.)\n12:30 - Lunch break\n13:30 - Wrapping up Group work\n14:45 - Coffee Break\n15:00 - Presenting models and warp up Day 3\n16:00 - Pub",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Program</span>"
    ]
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "2  Installation and set up",
    "section": "",
    "text": "The first bottleneck for any workshop is getting the software installed and running on everyone’s machine. So we’ll spend a few minutes here making sure we’re all good with installing and taking a look at some of teh data we’ll be working with during the workshop, before moving on to the nitty gritty. So, lets start by installing the Gen3sis R package.\nYou can install the package directly from CRAN as follows.\n\ninstall.packages(\"gen3sis\")\npackageVersion(\"gen3sis\")\n\nToday we’ll install the most recent version of the package from GitHub using devtools.\n\ninstall.packages(\"devtools\")\ndevtools::install_github(repo = \"project-gen3sis/R-package\", dependencies = TRUE)\nlibrary(gen3sis)\npackageVersion(\"gen3sis\")\n\nAll the data for the workshop is stored in the ‘data’ folder.\n\ndata_dir &lt;- \"data\"\n\nIn this fodler we include a paleoenvironmental reconstruction of South American temperature and aridity at a coarse spatial resolution of 2 degrees, and at a temporal resolution of 1 million years. Load it in and investigate some of it’s features.\n\n# read the R data file\nlandscape &lt;- readRDS(file.path(data_dir,\"landscapes\", \"SA_coarse\", \"landscapes.rds\"))\n\n# class\nclass(landscape)\n\n# names\nnames(landscape)\n\n# dimensions\ndim(landscape$temp)\n\n# take a look at first elements\nlandscape$temp[1:10, 1:10]\n\n# column names\ncolnames(landscape$temp)\n\nCoolies. We can use different spatial R packages to play with our data, and later on, with our simulated output. Parts of gen3sis package use raster, however this package is now depreciated, so we’ll use terra except where stated. Ideally, you’ll install both.\n\ninstall.packages(\"terra\")\ninstall.packages(\"raster\")\n\nlibrary(terra)\n\n# Present Day South America\nSA_1 &lt;- rast(landscape$temp[ ,c(\"x\", \"y\", \"1\")])\nSA_65 &lt;- rast(landscape$temp[,c(\"x\", \"y\", \"65\")])\n\n# plot present day\nplot(SA_1)\n\n\n# plot 65 Million years ago\nplot(SA_65)\n\nLets overlay the maps to get an idea of how much South America has changed since the dinosaurs went extinct.\n\n# overlay\nplot(SA_65, col=rgb(1,0,0))\nplot(SA_1, col=rgb(0,0,1,0.5,1), add=T)\n\nLoad in a config file containing the rules and parameters of a single simulation. We’ll get into what this all means next chapter.\n\nconfig_dir &lt;- \"configs/SouthAmerica\"\nconfig &lt;- create_input_config(config_file = file.path(config_dir, \"config_southamerica.R\"))\nnames(config$gen3sis)\nnames(config$gen3sis$general)\n\nNow time to run a simulation in South America. We’ll just run from 20 million years ago to the present-day at 1 million year intervals so it runs quick enough to finish in a couple of minutes. Note the output as it runs. Think about what its printing.\n\nsim &lt;- run_simulation(config = file.path(config_dir, \"config_southamerica.R\"), \n               landscape = file.path(data_dir,\"landscapes\", \"SA_coarse\"),\n               output_directory = \"output/SouthAmerica\",\n               verbose=1)\n\nIf you’ve made it this far, great! You’re equipped with the tools, now we’re ready to explore how Gen3sis works in more detail.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Installation and set up</span>"
    ]
  },
  {
    "objectID": "basics.html",
    "href": "basics.html",
    "title": "3  Config Basics",
    "section": "",
    "text": "To begin the dive into what Gen3sis is, and how it operates, we’ll start by looking a config file. The config is the code for the ecological and evolutionary rules and other parameters of Gen3sis, such as the random see, instructions on saving output, etc.\nA config file is a a stand-alone R script which is modified by you. We can generate a new blank config file automatically to specified location in your configs folder and open it in R. Give that try.\n\nwrite_config_skeleton(\"configs/blank_config\")\n\nOnce you’ve got the hang of Gen3sis it’s straightforward to populate these with functions. However, for now, lets start with the config we used in the previous section. We should still have that config loaded in our workspaces, but if not run this code.\n\nconfig_dir &lt;- \"configs/SouthAmerica\"\nconfig &lt;- create_input_config(config_file = file.path(config_dir, \"config_southamerica.R\"))\n\nlets take a look at the config\n\nconfig\n\nOh boy, that’s intimidating. But, don’t stress, we’ll go through it piece by piece and learn what each bit is doing.\n\nstr(config)\nnames(config)\n\nWe can see that the config is a list with 3 components: 1. gen3sis, 2. user, 3. directories. For now, we’ll focus on gen3sis which is the meat of the config. This ‘gen3sis’ element itself is a list of 6 elements: ‘general’, ‘initialization’, ‘dispersal’, ‘speciation’,‘mutation’, and ‘ecology’.\n\nnames(config$gen3sis)\n\n\nGeneral\nThe first element, ‘general’, sets up some important global parameters of the model\n\nconfig$gen3sis$general\n\nThe random seed determines the starting point for random number generators in R. Because the simulations have stochastic processes, to reproduce a result, we need to have the same random seed, so by fixing it in a simulation, we can ensure we will get the exact same results next time we run the sim. Let’s change the seed to 777.\n\nconfig$gen3sis$general$random_seed\n\nconfig$gen3sis$general$random_seed &lt;- 777\n\nThe start time is the time-step of the landscape file which the simulation will start at. We saw in the previous chapter that the South American landscape file had 65 time-steps, but we actually only started our simulation at time-step 20, or 20 time-steps before the final one. Each time-step in the landscape is 1 million years apart, so the timestep 20 is 20 million years ago. However, if the landscape units were in 100 thousand years, then time-step 20 would be 2 million years ago. Let’s run the next simulation from an older timepoint, lets say the start of the Oligocene, 34 Ma.\n\nconfig$gen3sis$general$start_time\n\nconfig$gen3sis$general$start_time &lt;- 34\n\nOur simulation ran from 20 Ma to the present-day. However, we may wish for the simulation to finish before the present-day, for example just the Oligocene period 34Ma - 23Ma. To do this we can change the ‘end_time’. When left as NA, the simulation will run to the final time-step. So let’s change that to 23 Ma.\n\nconfig$gen3sis$general$end_time\n\nconfig$gen3sis$general$end_time &lt;- 23\n\n#Initialization {.unnumbered} The first step of any simulation is to populate your landscape with one or more species and assign them traits. This includes geographic distribution, types of traits to be implemented, and values for those traits. Every species in the simulation is stored in a list and consists of an ID, their abundance, trait values, and intraspecies divergence values.\n\n\nDispersal (migration)\nHow species disperse across the landscape is determined by simulated migration events between habitable cells. The range and behaviour of these events is set by users and can be based on fixed values, draws from probability distributions, species trait values, or anything else thought up by users.\n\n\nSpeciation (population divergence)\nThe speciation function determines how you want new species to form. This is based on a divergence counter and speciation threshold. Once two clusters within a species diverge enough to reach the speciation threshold, a new species forms. How the counter behaves is entirely up to users!\n\n\nMutation (trait evolution)\nEach species can have traits set by users. This function provides the opportunity to modify or “mutate” these traits with each time step in the simulation. How these traits change (or not) is entirely customisable.\n\n\nEcology (interactions)\nEvery species present in a cell across the landscape has an abundance value representing the population size of the species in that location. The ecology function allows users to modify this abundance value based on environmental values, species interactions, or anything else relevant to the study. An abundance of 0 leads to the extinction of the species in that cell.\n\noutput_dir &lt;- \"output/SouthAmerica\"\nsim &lt;- readRDS(file.path(output_dir, \"config_southamerica/sgen3sis.rds\"))\nnames(sim)\n\n\n\n#### Visualize --------------- \n#the outputs\nplot_summary(sim)\n\n# using raster package\nplot(rasterFromXYZ(sim$summary$`richness-final`))\n\nplot(rasterFromXYZ(sim$summary$`richness-final`), col=gen3sis::color_richness(10))\n\n\n# plot diversity at 3 time slices\ntimesteps &lt;- c(40, 20, 0)\npar(mfrow = c(1, 3))\nfor (i in timesteps) {\n  landscape_i &lt;- readRDS(file.path(output_dir, paste0(\"config_southamerica/landscapes/landscape_t_\", \n                                                    i, \".rds\")))\n  species_i &lt;- readRDS(file.path(output_dir, paste0(\"config_southamerica/species/species_t_\", \n                                                  i, \".rds\")))\n  plot_richness(species_i, landscape_i)\n}\ndev.off()",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Config Basics</span>"
    ]
  },
  {
    "objectID": "output.html",
    "href": "output.html",
    "title": "4  Output",
    "section": "",
    "text": "The simulation output has several components which together, or seperately, allow for all kinds of analyses of resulting biodiversity patterns.\n\n5 Generate presence-absence matrix\nA presence/absence matrix is a commonly used format for performing ecological analyses, such as PD/MPD/MNTD in the picante package.\n# first set the directory to the output folder   # then load in landscape and species obejct at the final timestep (will work for any timestep) setwd(\"landscapes\") landscape &lt;- readRDS(\"landscape_t_0.rds\")  setwd(\"../species\") species &lt;- readRDS(\"species_t_0.rds\")  # grid cell names all_cells &lt;- rownames(landscape$coordinates)  # get 0 for absence and 1 for presence in each grid cell all_species_presence &lt;- do.call( cbind, lapply(species, FUN = function(x) {ifelse(all_cells %in% names(x$abundance), 1, 0)}))  # colnames are species names colnames(all_species_presence ) &lt;- unlist(lapply(species, function(x){x$id}))  # column bind with x/y coordinates  presence_absence_matrix &lt;- cbind(landscape$coordinates, all_species_presence)\n\n\n6 Calculate taxonomic & phylogenetic diversity\nThe first step in your analysis could for instance be to calculate mean species richness per grid cell.\n# read in the richness object for the desired timestep richness &lt;- readRDS(\"richness_t_0.rds\")) richness_mean &lt;- mean(richness, na.rm=T)  \nThen you might want to look at indices of phylogenetic diversity.\n# read in the phylogeny for the desired timestep phy &lt;- try(read.nexus(\"phylogeny_t_0.nex\")))  # to make the simulations comparable, you should probably rescale each of them using the following function  rescaleTree&lt;-function(tree,scale){   tree$edge.length&lt;-     tree$edge.length/max(nodeHeights(tree)[,2])*scale   return(tree) }  phy &lt;- rescaleTree(phy, 1)  # now that you have a presence-absence matrix, you can calculate phylogenetic community  # metrics like Faith's PD, MPD, and MNTD  pd_estimate &lt;- pd.query(phy, presence_absence_matrix, standardize = T) mpd_estimate &lt;- mpd.query(phy, presence_absence_matrix, standardize = T) mntd_estimate &lt;- mpd.query(phy, presence_absence_matrix, standardize = T)\n\n\n7 Calculate functional diversity\nOne amazing feature of gen3sis is the possibility to let traits evolve with your simulation. The traits are defined in your core functions and can be anything, temperature niche, body size, or the number of limbs. The world is your oyster! To draw meaningful conclusions from your experiment you might have to\n# load in the traits from the desired time step traits &lt;- readRDS(\"traits_t_0.rds\"))  # transform from a list into a readable vector   temp_trait_means &lt;- unlist(lapply(traits, FUN=function(x){y=mean(x[,\"temp\"], na.rm=T);return(y)})) # this is the temperature niche    bs_trait_means &lt;- unlist(lapply(traits, FUN=function(x){y=mean(x[,\"body_size\"], na.rm=T);return(y)})) # and this represents bodysize   # exploring different summary statistics of the same metrics  temp_mean&lt;- mean(temp_trait_means, na.rm=T) # mean temp niche  temp_sd &lt;- sd(temp_trait_means, na.rm=T) # sd temp niche  temp_skewness[i] &lt;- skewness(temp_trait_means, na.rm=T)     bs_mean&lt;- mean(bs_trait_means, na.rm=T) # mean temp niche  bs_sd &lt;- sd(bs_trait_means, na.rm=T) # sd temp niche\n\n\n8 Calculate batch of spatial, phylogenetic, and functional metrics\nThis script calculates a set of 53 summary statistics used in Skeels et al (2021) and gives an example of, not only how to calculate a variety of different metrics, but also how to do so on a large batch of simulations (here we loop over the output folders of 500 simulations).\n\n\n9 Calculate diversification rates through space and time\nThis script calculates speciation rates and extinction at each time step and also summarises speciation rates and extinction by both temperature and latitude to understand the spatial variation in diversification rates.\n\n\n10 Calculate phylogenetic and weighted endemisms\nThis script calculates phylogenetic and weighted endemism from simulated data.\n\n\n11 Standalone functions\nAnother way of organizing analysis tools is to have a set of functions similar to an R package that can be called in various scripts. Here is a set of various example functions to use / look through.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Output</span>"
    ]
  },
  {
    "objectID": "considerations.html",
    "href": "considerations.html",
    "title": "5  Considerations",
    "section": "",
    "text": "5.0.1 Paleo-environmental data\nInvestigations of deep-time paleoclimatic influences on biodiversity are still limited by our current mechanistic knowledge of eco-evolutionary processes and by computational power, as well as by the availability of paleo-environmental reconstructions (Svenning et al., 2015, Franklin et al., 2017, Pontarp et al., 2019). Biodiversity dynamics and climatic variations happening on smaller spatio-temporal scales have to be ignored due to the uncertainty in paleo-landscape reconstructions.\n\n\n5.0.2 Distribution, fossil and phylogenetic data\nBiodiversity data is of the essence when evaluating implemented processes of eco-evolutionary models with empirical biodiversity patterns. In order to perform the evaluation, multiple past and present biological empirical datasets can be used, such as: (i) fossil records, (ii) calibrated molecular phylogenies, (iii) population genetic data, (iv) trait measurements, and (v) species distribution maps. The combination of multiple datasets, such as phylogenies and fossils, provides a better picture of past dynamic processes (Huang et al., 2015, Hagen et al., 2018, Coiro et al., 2019). The main gaps remaining in biodiversity data, as pointed out in multiple studies (Franklin, 2010, Hampton et al., 2015, Meyer et al., 2016), are: (i) sparse data with regional biases, (ii) a lack of non-occurrence data reporting, (iii) poor availability of public data, and (iv) high heterogeneity in data quality and methodologies.\n\n\n5.0.3 Model complexity\nThe modelling engine gen3sis introduced here is predominantly a theoretical model rather than exclusively a calculating tool, since responses from possible natural processes are predicted (Guisan and Zimmermann, 2000). By prioritizing theoretical correctness of the predicted response over predicted precision, a spatio-temporal mechanistic model was created in the most flexible way possible in order to explore multiple hypotheses and processes.\n\n\n5.0.4 Computational time\nRuntimes are heavily dependent on the number of species emerging during a simulation and their geographical extent, and thus are highly dependent on the assumed model parameters and input landscape. The current state of optimizations is limited because no parallelization is implemented, as ease of maintenance and development are prioritized for this initial release.\n\n\n5.0.5 Core functions\nGiven the inherent computational limitations, gen3sis tries to incorporate all the processes at the level of geographical ranges of populations, as realistically as possible. However, the modelled objects are limited to geographic populations and species. Also, it is not possible to track cluster phylogenies. Moreover, there is no within-cell variation within a species.\n\n\n5.0.6 Caveats\n\n\ntemporal behaviour: No variables in gen3sis have an explicit temporal component. It is always x/timestep. That means that most processes will either speed up or slow down if one changes the temporal resolution of the input. For example, a configured rate of dispersal of 1/timestep can become 10/million years or 2/million years for simulations with 10 and 2 timesteps per million years respectively.\n\nraster inputs: The behaviour of the species dispersal and geographic clustering depends on the spatial input resolution. Changing input resolution can have secondary effects. For example, a higher-resolution landscape input will have more cells. Not only will it be easier to reach neighbouring cells, but there will also be more chances for dispersal events to happen. As such there might be a non-linear dependency between dispersal values and input resolution.\n\npolar distortions: Our distance calculations correct for the distance distortions raster-based data experiences towards the polar regions. This does lead to many small cells being close together in the polar regions. This makes dispersal a lot easier compared to equatorial cells in two ways. First, the dispersal distances are often enough to reach multiple neighbours. And second, since there are many more cells closed by, more dispersal events can happen.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Considerations</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Center for Biodiversity Analysis: Gen3sis Workshop 2024",
    "section": "",
    "text": "Program\nWelcome to the CBA sponsored workshop on the Gen3sis biodiversity simulation software! We’ll be using this Quarto book to navigate through the workshop practicals. Quarto allows us to embed R code throughout. The workshop will be (roughly) following this program. Enjoy!",
    "crumbs": [
      "Program"
    ]
  },
  {
    "objectID": "Day2_Prac4_outputs.html",
    "href": "Day2_Prac4_outputs.html",
    "title": "4  🖥️ Silicodiversity",
    "section": "",
    "text": "Exploring outputs\nIn this prac we will explore the files outputted from gen3sis using the island simulations we ran yesterday. We will learn how to manipule/wrange these data structures into formats used by common R packages for phylogenetic comparative methods, community phylogenetics, biogeography, etc.\nThe goal for today will be to produce:\nFirst, let’s make sure we have the necessary packages loaded\nrequire(gen3sis)\n\nLoading required package: gen3sis\n\n\nWarning: package 'gen3sis' was built under R version 4.2.3\n\nrequire(terra)\n\nLoading required package: terra\n\n\nWarning: package 'terra' was built under R version 4.2.3\n\n\nterra 1.7.29\n\nrequire(ape)\n\nLoading required package: ape\n\n\n\nAttaching package: 'ape'\n\n\nThe following objects are masked from 'package:terra':\n\n    rotate, trans, zoom\n\nrequire(phytools)\n\nLoading required package: phytools\n\n\nWarning: package 'phytools' was built under R version 4.2.3\n\n\nLoading required package: maps\n\n\nWarning: package 'maps' was built under R version 4.2.3\n\n\n\nAttaching package: 'phytools'\n\n\nThe following object is masked from 'package:terra':\n\n    rescale\n\nrequire(picante)\n\nLoading required package: picante\n\n\nWarning: package 'picante' was built under R version 4.2.3\n\n\nLoading required package: vegan\n\n\nLoading required package: permute\n\n\nLoading required package: lattice\n\n\nThis is vegan 2.6-4\n\n\n\nAttaching package: 'vegan'\n\n\nThe following object is masked from 'package:phytools':\n\n    scores\n\n\nLoading required package: nlme",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>🖥️ Silicodiversity</span>"
    ]
  },
  {
    "objectID": "Day1_Prac1_setup.html",
    "href": "Day1_Prac1_setup.html",
    "title": "1  🍍 Gettin’ Started",
    "section": "",
    "text": "Download Github Repository\nFirst thing is to download all of the data needed from github and set up our workspace.\nNow you should be able to follow along, copying the code from this Quarto document into your console. The alternative option is to open the RProject file “CBA_Gen3sis_Workshop_2024.Rproj” and work directly within this project.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>🍍 Gettin' Started</span>"
    ]
  },
  {
    "objectID": "Day1_Prac2_basics.html",
    "href": "Day1_Prac2_basics.html",
    "title": "2  ⛸️ Configure Skating",
    "section": "",
    "text": "General\nThe first element, ‘general’, sets up some important global parameters of the model\nconfig$gen3sis$general\n\n$random_seed\n[1] NA\n\n$start_time\n[1] NA\n\n$end_time\n[1] NA\n\n$max_number_of_species\n[1] NA\n\n$max_number_of_coexisting_species\n[1] NA\n\n$end_of_timestep_observer\nfunction (...) \n{\n}\n&lt;bytecode: 0x000001e101818da0&gt;\n&lt;environment: 0x000001e10181d760&gt;\n\n$trait_names\nlist()\n\n$environmental_ranges\nlist()\n\n$verbose\n[1] FALSE\nThe random seed determines the starting point for random number generators in R. Because the simulations have stochastic processes, to reproduce a result, we need to have the same random seed, so by fixing it in a simulation, we can ensure we will get the exact same results next time we run the sim. Let’s change the seed to 777.\nconfig$gen3sis$general$random_seed\n\n[1] NA\n\nconfig$gen3sis$general$random_seed &lt;- 777\nThe start time is the time-step of the landscape file which the simulation will start at. We saw in the previous chapter that the South American landscape file had 65 time-steps, but we actually only started our simulation at time-step 20, or 20 time-steps before the final one. Each time-step in the landscape is 1 million years apart, so the timestep 20 is 20 million years ago. However, if the landscape units were in 100 thousand years, then time-step 20 would be 2 million years ago. Let’s run the next simulation from an older timepoint, lets say the start of the Oligocene, 34 Ma.\nconfig$gen3sis$general$start_time\n\n[1] NA\n\nconfig$gen3sis$general$start_time &lt;- 34\nOur simulation ran from 20 Ma to the present-day. However, we may wish for the simulation to finish before the present-day, for example just the Oligocene period 34Ma - 23Ma. To do this we can change the ‘end_time’. When left as NA, the simulation will run to the final time-step. So let’s change that to 23 Ma.\nconfig$gen3sis$general$end_time\n\n[1] NA\n\nconfig$gen3sis$general$end_time &lt;- 23\nOther general settings include setting the maximum number of species in simulation, and in each grid cell before the simulation terminates (max_number_of_species, max_number_of_coexisting_species) which is a good way of aborting simulations before they get unwieldy, the names of the traits that each species will have in the simulation (trait_names), and the range of the environmental data (environmental_ranges). We’ll these as is for now.\nconfig$gen3sis$general$max_number_of_species\n\n[1] NA\n\nconfig$gen3sis$general$max_number_of_coexisting_species\n\n[1] NA\n\nconfig$gen3sis$general$trait_names\n\nlist()\n\nconfig$gen3sis$general$environmental_ranges\n\nlist()\nLast but not least in the general setting is the oberserver function. At each time step in the simulation, users have the option to save different outputs and make different plots. The species object contains a list, where each element is a species. The species has information on the occupancy, abundance, and trait values of populations of that species in all inhabited grid cells. The phylogeny object contains information on the relatedness of all species to each other.\nMost of the biodiversity infromation we simulate is contained in species objects and phylogeny objects so we will save these at each timestep. We will also plot species richness as a way of visualizing how the simulation proceeds.\nconfig$gen3sis$general$end_of_timestep_observer = function(data, vars, config){\n    save_species()\n    save_phylogeny()\n  \n  # plotting function example:\n    plot_richness(data$all_species, data$landscape)\n}",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>⛸️ Configure Skating</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html",
    "href": "Day1_Prac3_islands.html",
    "title": "3  🏝️ Island Hopping",
    "section": "",
    "text": "Dynamic Island Landscape\n# load landscapes\nlc &lt;- readRDS(file.path(\"data\", \"landscapes\", \"islands\",\"landscapes.rds\"))\n\n# get names of landscape variables\nnames(lc)\n\n[1] \"elevation\" \"mean_temp\" \"min_temp\"  \"max_temp\"  \"patch\"    \n\n# get first time step\nfirst_step_pos &lt;- ncol(lc$mean_temp)\n\n# get first 10 sites of mean temperature for the 2 last time steps and the first (oldest) time step\nlc$mean_temp[100:110, c(1:4, first_step_pos)]\n\n       x    y        0        1      500\n100 39.5 58.5       NA       NA       NA\n101 40.5 58.5       NA       NA       NA\n102 41.5 58.5       NA       NA       NA\n103 42.5 58.5       NA       NA       NA\n104 43.5 58.5       NA       NA       NA\n105 44.5 58.5       NA       NA       NA\n106 45.5 58.5       NA       NA       NA\n107 46.5 58.5       NA       NA       NA\n108 47.5 58.5       NA 23.82152       NA\n109 48.5 58.5       NA 23.56207       NA\n110 49.5 58.5 24.89379 23.39746 24.85717\n# plot mean_temp for first and last time step\nplot(rast(lc$mean_temp[ ,c(1:3, first_step_pos)]))\nLook to see if there are any temporal trends in temperature or elevation.\npar(mfrow=c(1,2))\n# plot the change in mean tempereature through time\nmean_temperatures &lt;- colMeans(lc$mean_temp[, 3:ncol(lc$mean_temp)], na.rm=T)\nplot(seq(from=0, to = -5, by=-0.01),mean_temperatures ,  xlab=\"time (Ma)\", ylab=\"mean temperature\", type='l')\n\n# plot the change in mean elevation through time\nmean_elevation &lt;- colMeans(lc$elevation[, 3:ncol(lc$elevation)], na.rm=T)\nplot(seq(from=0, to = -5, by=-0.01), mean_elevation, xlab=\"time (Ma)\", ylab=\"mean elevation\", type='l')",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>🏝️ Island Hopping</span>"
    ]
  },
  {
    "objectID": "Day2_Prac4_outputs.html#outputs-and-biodiversity-patterns---part-2-island-biogeography",
    "href": "Day2_Prac4_outputs.html#outputs-and-biodiversity-patterns---part-2-island-biogeography",
    "title": "5  Gen3sis outputs and Biodiversity Patterns",
    "section": "5.2 Outputs and Biodiversity Patterns - Part 2: Island Biogeography",
    "text": "5.2 Outputs and Biodiversity Patterns - Part 2: Island Biogeography\nLets dive even further into the outputs and see if the simulations we did yesterday offer any fundamental insights into island biogeography theory.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Gen3sis outputs and Biodiversity Patterns</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#exercise",
    "href": "Day1_Prac3_islands.html#exercise",
    "title": "3  Diversification in a Model Island System",
    "section": "Exercise",
    "text": "Exercise\nFrom the small tweak to the divergence factor and the initial conditions, we can see more species being generated in M2 and M3 compared to M1. We can also see extremely asymmetrical trees.\nReview the M2 and M3 config files and try to understand what they’re doing.\n\nHow are the dynamics through time in M2 and M3 different to M1, and how are they similar?\nAre the original occupants of each island diversifying at the same pace? How could you test this?\nConsider how you might modify the configuration or apply it to a specific research question.\nDo you think all islands would have similar degrees of phylogenetic diversity or turnover?\n\nWe’ll explore some of these questions tomorrow!",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diversification in a Model Island System</span>"
    ]
  },
  {
    "objectID": "Day1_Prac1_setup.html#download-github-repository",
    "href": "Day1_Prac1_setup.html#download-github-repository",
    "title": "1  🍍 Gettin’ Started",
    "section": "",
    "text": "Go to https://github.com/alexskeels/CBAGen3sis.github.io and download the repository as follows:\n\n\n\nGithub\n\n\nPut it somewhere on your machine that you can readily access\nUnzip the folder\nOpen up RStudio\nSet the working directory to this folder\n\nsetwd(file.path(\"WHERE/YOU/UNZIPPED\",\"CBAGen3sis.github.io\"))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>🍍 Gettin' Started</span>"
    ]
  },
  {
    "objectID": "Day1_Prac1_setup.html#install-packages",
    "href": "Day1_Prac1_setup.html#install-packages",
    "title": "1  🍍 Gettin’ Started",
    "section": "Install Packages",
    "text": "Install Packages\nToday we’ll install the stable version of the package directly from CRAN as follows.\n\n# install the package\ninstall.packages(\"gen3sis\")\n\n# check the package version\npackageVersion(\"gen3sis\")\n\nYou could also install the most recent version of the package from GitHub using devtools. But hold off on this today so we’re all working with the same version.\n\n#install.packages(\"devtools\")\n#devtools::install_github(repo = \"project-gen3sis/R-package\", dependencies = TRUE)\n#packageVersion(\"gen3sis\")\n\n\nlibrary(gen3sis)\n\nWarning: package 'gen3sis' was built under R version 4.2.3\n\n\nYou can also install these other packages we’ll use throughout the workshop.\n\nrequire(\"terra\")\n\nLoading required package: terra\n\n\nWarning: package 'terra' was built under R version 4.2.3\n\n\nterra 1.7.29\n\nrequire(\"raster\")\n\nLoading required package: raster\n\n\nWarning: package 'raster' was built under R version 4.2.3\n\n\nLoading required package: sp\n\nrequire(\"ape\")\n\nLoading required package: ape\n\n\n\nAttaching package: 'ape'\n\n\nThe following objects are masked from 'package:raster':\n\n    rotate, zoom\n\n\nThe following objects are masked from 'package:terra':\n\n    rotate, trans, zoom\n\nrequire(\"phytools\")\n\nLoading required package: phytools\n\n\nWarning: package 'phytools' was built under R version 4.2.3\n\n\nLoading required package: maps\n\n\nWarning: package 'maps' was built under R version 4.2.3\n\n\n\nAttaching package: 'phytools'\n\n\nThe following object is masked from 'package:terra':\n\n    rescale\n\nrequire(\"picante\")\n\nLoading required package: picante\n\n\nWarning: package 'picante' was built under R version 4.2.3\n\n\nLoading required package: vegan\n\n\nLoading required package: permute\n\n\nLoading required package: lattice\n\n\nThis is vegan 2.6-4\n\n\n\nAttaching package: 'vegan'\n\n\nThe following object is masked from 'package:phytools':\n\n    scores\n\n\nLoading required package: nlme\n\n\n\nAttaching package: 'nlme'\n\n\nThe following object is masked from 'package:raster':\n\n    getData",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>🍍 Gettin' Started</span>"
    ]
  },
  {
    "objectID": "Day1_Prac1_setup.html#access-data",
    "href": "Day1_Prac1_setup.html#access-data",
    "title": "1  🍍 Gettin’ Started",
    "section": "Access Data",
    "text": "Access Data\nAll the data for the workshop is stored in the ‘data’ folder.\n\ndata_dir &lt;- \"data\"\n\nIn this fodler we include a paleoenvironmental reconstruction of South American temperature and aridity at a coarse spatial resolution of 2 degrees, and at a temporal resolution of 1 million years. Load it in and investigate some of it’s features.\n\n# read the R data file\nlandscape &lt;- readRDS(file.path(data_dir,\"landscapes\", \"SA_coarse\", \"landscapes.rds\"))\n\n# class\nclass(landscape)\n\n[1] \"list\"\n\n# names\nnames(landscape)\n\n[1] \"temp\" \"arid\" \"area\"\n\n# dimensions\ndim(landscape$temp)\n\n[1] 1476   68\n\n# take a look at first elements\nlandscape$temp[1:10, 1:10]\n\n     x  y        1        2        3        4        5        6        7\n1  -94 12       NA       NA       NA       NA       NA       NA       NA\n2  -92 12       NA       NA       NA       NA       NA       NA       NA\n3  -90 12       NA       NA       NA       NA       NA       NA       NA\n4  -88 12       NA       NA       NA       NA       NA       NA 27.97588\n5  -86 12 22.76293 28.90419 28.61839 28.47647 28.00591 27.22872 26.96520\n6  -84 12 23.40779 29.34289 28.68802 28.96432 28.39244 27.69988 27.31383\n7  -82 12       NA       NA       NA       NA       NA       NA       NA\n8  -80 12       NA       NA       NA       NA       NA       NA       NA\n9  -78 12       NA       NA       NA       NA       NA       NA       NA\n10 -76 12       NA       NA       NA       NA       NA       NA       NA\n          8\n1        NA\n2        NA\n3        NA\n4  27.87671\n5  27.05735\n6  27.95244\n7        NA\n8        NA\n9        NA\n10       NA\n\n# column names\ncolnames(landscape$temp)\n\n [1] \"x\"  \"y\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\"\n[16] \"14\" \"15\" \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\"\n[31] \"29\" \"30\" \"31\" \"32\" \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"43\"\n[46] \"44\" \"45\" \"46\" \"47\" \"48\" \"49\" \"50\" \"51\" \"52\" \"53\" \"54\" \"55\" \"56\" \"57\" \"58\"\n[61] \"59\" \"60\" \"61\" \"62\" \"63\" \"64\" \"65\" \"66\"\n\n\nCoolies. We can use different spatial R packages to play with our data, and later on, with our simulated output. Parts of gen3sis package use raster, however this package is now depreciated, so we’ll use terra except where stated. Ideally, you’ll have both installed.\n\nlibrary(terra)\n\n# Present Day South America\nSA_1 &lt;- rast(landscape$temp[ ,c(\"x\", \"y\", \"1\")])\nSA_65 &lt;- rast(landscape$temp[,c(\"x\", \"y\", \"65\")])\n\n# plot present day\nplot(SA_1)\n\n\n\n\n\n\n\n\n\n# plot 65 Million years ago\nplot(SA_65)\n\n\n\n\n\n\n\n\nLets overlay the maps to get an idea of how much South America has changed since the dinosaurs went extinct.\n\n# overlay\nplot(SA_65, col=rgb(1,0,0))\nplot(SA_1, col=rgb(0,0,1,0.5,1), add=T)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>🍍 Gettin' Started</span>"
    ]
  },
  {
    "objectID": "Day1_Prac1_setup.html#access-configs",
    "href": "Day1_Prac1_setup.html#access-configs",
    "title": "1  🍍 Gettin’ Started",
    "section": "Access Configs",
    "text": "Access Configs\nLoad in a config file containing the rules and parameters of a single simulation. We’ll get into what this all means next chapter.\n\nconfig_dir &lt;- \"configs\"\nconfig &lt;- create_input_config(config_file = file.path(config_dir, \"config_southamerica_Day1Prac1.R\"))\nnames(config$gen3sis)\n\n[1] \"general\"        \"initialization\" \"dispersal\"      \"speciation\"    \n[5] \"mutation\"       \"ecology\"       \n\nnames(config$gen3sis$general)\n\n[1] \"random_seed\"                      \"start_time\"                      \n[3] \"end_time\"                         \"max_number_of_species\"           \n[5] \"max_number_of_coexisting_species\" \"end_of_timestep_observer\"        \n[7] \"trait_names\"                      \"environmental_ranges\"            \n[9] \"verbose\"",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>🍍 Gettin' Started</span>"
    ]
  },
  {
    "objectID": "Day1_Prac1_setup.html#run-a-single-simulation",
    "href": "Day1_Prac1_setup.html#run-a-single-simulation",
    "title": "1  🍍 Gettin’ Started",
    "section": "Run a Single Simulation",
    "text": "Run a Single Simulation\nNow time to run a simulation in South America. We’ll just run from 20 million years ago to the present-day at 1 million year intervals so it runs quick enough to finish in a couple of minutes. Note the output as it runs. Think about what its printing.\n\nsim &lt;- run_simulation(config = file.path(config_dir, \"config_southamerica_Day1Prac1.R\"), \n               landscape = file.path(data_dir,\"landscapes\", \"SA_coarse\"),\n               output_directory = \"output/SouthAmerica\",\n               verbose=1)\n\nNow read in some of the output to make sure it’s stored in a sensible place.\n\n# read phylogeny\nphy &lt;- read.nexus(file.path(\"output\", \"SouthAmerica\", \"config_southamerica_Day1Prac1\", \"phy.nex\" ))\n\n# plot phylogeny\nplot(phy, cex=0.1, type=\"fan\")\n\n\n\n\n\n\n\n\nIf you’ve made it this far, great! You’re equipped with the tools, now we’re ready to explore how Gen3sis works in more detail.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>🍍 Gettin' Started</span>"
    ]
  },
  {
    "objectID": "Day2_Prac4_outputs.html#species-object-through",
    "href": "Day2_Prac4_outputs.html#species-object-through",
    "title": "4  Day 2: Gen3sis outputs and Biodiversity Patterns",
    "section": "4.1 Species object through",
    "text": "4.1 Species object through",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Day 2: Gen3sis outputs and Biodiversity Patterns</span>"
    ]
  },
  {
    "objectID": "Day1_Prac2_basics.html#initialization",
    "href": "Day1_Prac2_basics.html#initialization",
    "title": "2  ⛸️ Configure Skating",
    "section": "Initialization",
    "text": "Initialization\nInitialization lets us define the number, abundance, location, and traits of the ancestral species. This is what you start the simulation with. You may want to start with a single species, so the simulation follows the diversification of single monophyletic radiation. Alternatively, you may seed the landscape with many species and this is also possible. Each species must be given the locations in which they will occur, in the form of characters matching the grid cell identifiers, and values for the traits we named in the general settings.\n\nconfig$gen3sis$initialization\n\n$initial_abundance\nNULL\n\n$create_ancestor_species\nNULL\n\n\nIn this example, we are generating five species to begin. We first define a box from which we sample points to use to place the first species on the landscape. We randomly sample a single grid cell to place each initial species in. Next, we give each initial species values for the three traits. Here, we give the value for temp as the temperature value of the grid cell the species will occur in. We set a dispersal equal to 1. We repeat this 5 times, for 5 species. We can create more ancestor species by repeating this process in a loop , or we could manually create ancestral range by hand-selecting grid cells for the species to occur in.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>⛸️ Configure Skating</span>"
    ]
  },
  {
    "objectID": "Day1_Prac2_basics.html#dispersal-migration",
    "href": "Day1_Prac2_basics.html#dispersal-migration",
    "title": "2  ⛸️ Configure Skating",
    "section": "Dispersal (migration)",
    "text": "Dispersal (migration)\nHow species disperse across the landscape is determined by simulated migration events between habitable cells. The range and behaviour of these events is set by users and can be based on fixed values, draws from probability distributions, species trait values, or anything else thought up by users.\n\nconfig$gen3sis$dispersal\n\n$max_dispersal\n[1] Inf\n\n$get_dispersal_values\nNULL\n\n\nHere we set the maximum dispersal distance as infinty (e.g., no maximum), and we draw the dispersal values from a Weibull distribution with shape parameter = 1.5 and scale = 133. We can see what this distribution looks like by plotting a histogram.\n\nhist(rweibull(1000, 1.5, 133), main= \"Weibull Distribution 1\", xlab=\"Dispersal Distance (km)\")\n\n\n\n\n\n\n\n\nYou can see the dispersal kernel is skewed around the scale parameter (here scale =133), so most dispersal is over shorter distances but some dispersal will be over a longer distance. You can play with the parameters to change the dispersal kernel. These could be based on a trait of the species.\n\n#more skewed distribution\nhist(rweibull(1000, 0.5, 133), main= \"Weibull Distribution 2\", xlab=\"Dispersal Distance (km)\")\n\n\n\n\n\n\n\n\n\n#less skewed distribution\nhist(rweibull(1000, 3, 133), main= \"Weibull Distribution 2\", xlab=\"Dispersal Distance (km)\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>⛸️ Configure Skating</span>"
    ]
  },
  {
    "objectID": "Day1_Prac2_basics.html#speciation-population-divergence",
    "href": "Day1_Prac2_basics.html#speciation-population-divergence",
    "title": "2  ⛸️ Configure Skating",
    "section": "Speciation (population divergence)",
    "text": "Speciation (population divergence)\nIn the speciation function, we determine how populations diverge from one another and when they are sufficiently divergent to become new species. Populations that are geographically isolated (allopatric) diverge at each time step by the divergence factor and are considered new species when the accumulated divergence is greater than the divergence threshold. Divergence decreases when they come back into secondary contact at a rate of 1 and will coalesce into the same population once divergence is equal to 0.\n\nconfig$gen3sis$speciation\n\n$divergence_threshold\nNULL\n\n$get_divergence_factor\nNULL\n\n\nIn this example, the get_divergence_funtion returns a value of 1 each timestep, so the divergence accumulates by a value of 1 at each time step and populations become new species when divergence is greater than the divergence threshold, here given a value of 2. So a new species can form if two populations has been isolated for two timesteps.\nWe can change either the amount of divergence required for speciation…\n\nconfig$gen3sis$speciation$divergence_threshold &lt;- 4\n\n…or the rate at which divergence accumulates.\n\nconfig$gen3sis$speciation$get_divergence_factor &lt;- function(species, cluster_indices, landscape, config) { return(2)}\n\nBoth of these will speed up the rate of speciation, given enough population fragmentation.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>⛸️ Configure Skating</span>"
    ]
  },
  {
    "objectID": "Day1_Prac2_basics.html#mutation-trait-evolution",
    "href": "Day1_Prac2_basics.html#mutation-trait-evolution",
    "title": "2  ⛸️ Configure Skating",
    "section": "Mutation (trait evolution)",
    "text": "Mutation (trait evolution)\nIn the evolution function, we determine how the species’ traits change at each timestep and therefore how they evolve over time. In gen3sis, each species is comprised of separate populations in each inhabited grid cell, these populations form geographic clusters that are within dispersal distance of one another and could be considered to exchange individuals, and all geographic clusters together comprise the species.\nWe can evolve traits of each population independently. Alternatively, we could give all populations within a geographic cluster shared trait values and evolve traits at this level of organization, or again at the whole species level. At which level of biological organization you evolve traits will depend on your hypothesis and the system you are trying to represent.\nIn addition to mutating the traits of species, we might also want to homogenise traits of populations that are likely exchanging gene flow.\nThis example, highlights both homogenising traits and evolving traits.\n\nconfig$gen3sis$mutation\n\n$apply_evolution\nNULL\n\n\nHomogensation assigns each geographic cluster the avaerage trait value weighted by the abundance of each population. Here larger populations contribute more than smaller populations to the avergae.\nAfter homogenisation, the trait evolves by drawing random values from a normal distribution and adding these to the traits. A mean of 0 ensures that positive trait changes and negative trait changes are equally likely. The trait_evolutionary_power variable detemines the degree of trait evolution, with higher values leading to higher average trait changes each time step. This process of adding a random normal variable approximates a Brownian motion model of trait evolution.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>⛸️ Configure Skating</span>"
    ]
  },
  {
    "objectID": "Day1_Prac2_basics.html#ecology-interactions",
    "href": "Day1_Prac2_basics.html#ecology-interactions",
    "title": "2  ⛸️ Configure Skating",
    "section": "Ecology (interactions)",
    "text": "Ecology (interactions)\nEvery species present in a cell across the landscape has an abundance value representing the population size of the species in that location. The ecology function allows users to modify this abundance value based on environmental values, species interactions, or anything else relevant to the study. An abundance of 0 leads to the extinction of the species in that cell.\n\nconfig$gen3sis$ecology\n\n$apply_ecology\nNULL\n\n\nHere we use the temp trait (temperature niche position) and temp_breadth (temperature niche breadth) to determine whether a population can survive in cell. We get the absolute difference between the niche position and the temperature value in the grid cell. We then ask if this difference is more than the niche breadth. If it is larger, this means the value of the grid cell is outside the population’s niche breadth and it goes extinct in that grid cell. Extinction is indicated by giving the abundance a value of 0 or setting the abundance to FALSE as done here.\nOK, that gives you the basic overview of all the main components of the gen3sis model. We will now move on to running some simulations on an island case study. But before we do, we may want to save any changes we made to the config for later. To do this use the following code.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>⛸️ Configure Skating</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#config-time---model-1",
    "href": "Day1_Prac3_islands.html#config-time---model-1",
    "title": "3  Diversification in a Model Island System",
    "section": "Config Time! - Model 1",
    "text": "Config Time! - Model 1\nload in a the m1 config\n\n# load config\nconf_m1 &lt;- create_input_config(\"configs/config_islands_simple_Day1Prac3_M1.R\")\n\n# list all main elements of the config file\nnames(conf_m1$gen3sis)\n\n# list all elements of the general section, i.e. the main settings and not so much on the eco-evolutionary processes\nnames(conf_m1$gen3sis$general)\n\n# if you're game take a look at the whole thing - whats different to the South America example?\nconf_m1\n\nOk now run the sim. Note that we’re usinga start time of 50 with 100-thousand-year time steps. So only the last 500 thousand years rather than the full 5 million. This is because\n\n# run simulation\nsim_m1 &lt;- run_simulation(config = \"configs/config_islands_simple_Day1Prac3_M1.R\", \n                      landscape = \"data/landscapes/islands\", \n                      output_directory = \"output/islands\")\n\nInvestigate the output\n\nsim_m1 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/sgen3sis.rds\")\n\n\n# visualize the outputs\nplot_summary(sim_m1)\n\n\n# plot richness from summary in custom fashion\nna_mask &lt;- is.na(lc$elevation[,\"0\"])\nrich_m1 &lt;- sim_m1$summary$`richness-final`\nrich_m1[na_mask,3] &lt;- NA\nplot(rast(rich_m1, type=\"xyz\"), main=\"Richness\")\n\nPick a couple of random time points to look at specifically.\n\n# plot richness at time step 32 using saved data\nsps32 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/species/species_t_32.rds\")\nlc32 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/landscapes/landscape_t_32.rds\")\nplot_richness(sps32, lc32)\n\n# plot richness at time step 12 using saved data\nsps12 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/species/species_t_12.rds\")\nlc12 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/landscapes/landscape_t_12.rds\")\nplot_richness(sps12, lc12)\n\nNow look at the phylogeny\n\n# Now lets look at the Phylogeny\nlibrary(ape)\nphy_m1 &lt;- read.nexus(\"output/islands/config_islands_simple_Day1Prac3_M1/phy.nex\")\nplot(phy_m1)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diversification in a Model Island System</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#customise-the-model---model-2",
    "href": "Day1_Prac3_islands.html#customise-the-model---model-2",
    "title": "3  Diversification in a Model Island System",
    "section": "Customise the model - Model 2",
    "text": "Customise the model - Model 2\nLets start changing features of the config and compare the outputs to our first model.\n\n# load in config M2\nconf_m2 &lt;- create_input_config(\"configs/config_islands_simple_Day1Prac3_M2.R\")\n\n# previously, in M1, populations need 10 time steps to complete speciation\nconf_m1$gen3sis$speciation$divergence_threshold\n\n# now populations only need 5 time steps to complete speciation\nconf_m2$gen3sis$speciation$divergence_threshold\n\n#We have also change the observer function to save the presence/absence matrix for each time step.\n# see original config\nconf_m1$gen3sis$general$end_of_timestep_observer \n\n# see modeified config\nconf_m2$gen3sis$general$end_of_timestep_observer \n\nRun M2!\n\n# run the new model\nsim_m2 &lt;- run_simulation(config=\"configs/config_islands_simple_Day1Prac3_M2.R\", landscape=\"data/landscapes/islands\", output_directory=\"output/islands\")\n\n\n# original dynamics\nplot_summary(sim_m1)\n\n# modified dynamics\nsim_m2 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M2/sgen3sis.rds\")\nplot_summary(sim_m2)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diversification in a Model Island System</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#go-cray---model-3",
    "href": "Day1_Prac3_islands.html#go-cray---model-3",
    "title": "3  Diversification in a Model Island System",
    "section": "Go cray - Model 3",
    "text": "Go cray - Model 3\nThe differences between M1 and M2 are predictable. Speciation happens a bit faster in M2, and you end up with more species. Overall, however, the patterns of richness are pretty similar. This suggests that this change in the rate of speciation isn’t having a big impact on geographic variation in where species are forming (at least from a glance). So let’s try a new model that has a few more tweaks to see a more measurable effect.\n\n#load in the config for model M3\nconf_m3 &lt;- create_input_config(\"configs/config_islands_simple_Day1Prac3_M3.R\")\n\n# take a look at the initialisation\nconf_m3$gen3sis$initialization\n\nThere is a big differences here. In the initialization stage we give each species a different value of it’s dispersal ability and temperature width trait (niche breadth), and these are inversely related - high dispersing species have narrow niche breadths and low dispering species have wide niche breadths. This may create an interesting trade-off in dynamics of island colonization.\nRun the simulation\n\nsim_m3 &lt;- run_simulation(config=\"configs/config_islands_simple_Day1Prac3_M3.R\", \n                         landscape=\"data/landscapes/islands\",\n                         output_directory=\"output/islands\")\n\nNow compare the dynamics\n\nsim_m3 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M3/sgen3sis.rds\")\n\n# compare the plot summaries\nplot_summary(sim_m1)\nplot_summary(sim_m2)\nplot_summary(sim_m3)\n\n\n# lets also compare the phylogenies\npar(mfrow=c(1,3))\nphy_m1 &lt;- read.nexus(\"output/islands/config_islands_simple_Day1Prac3_M1/phy.nex\")\nplot(phy_m1)\nphy_m2 &lt;- read.nexus(\"output/islands/config_islands_simple_Day1Prac3_M2/phy.nex\")\nplot(phy_m2)\nphy_m3 &lt;- read.nexus(\"output/islands/config_islands_simple_Day1Prac3_M3/phy.nex\")\nplot(phy_m3)\n\n\nExercise\nFrom the small tweak to the divergence factor and the initial conditions, we can see more species being generated in M2 and M3 compared to M1. We can also see extremely asymmetrical trees.\nReview the M2 and M3 config files and try to understand what they’re doing.\n\nHow are the dynamics through time in M2 and M3 different to M1, and how are they similar?\nAre the original occupants of each island diversifying at the same pace? How could you test this?\nConsider how you might modify the configuration or apply it to a specific research question.\nDo you think all islands would have similar degrees of phylogenetic diversity or turnover?\n\nWe’ll explore some of these questions tomorrow!",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diversification in a Model Island System</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#eager-beavers---model-4",
    "href": "Day1_Prac3_islands.html#eager-beavers---model-4",
    "title": "3  Diversification in a Model Island System",
    "section": "Eager Beavers - Model 4",
    "text": "Eager Beavers - Model 4\nIf you’ve managed to get thorugh all of this, run M4 config and using what you’ve learned, plot some of the outputs. What has changed about this config?\n\nsim_m4 &lt;- run_simulation(config=\"configs/config_islands_simple_Day1Prac3_M4.R\", landscape=\"data/landscapes/islands\", output_directory=\"output/islands\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diversification in a Model Island System</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#model-1-config-time",
    "href": "Day1_Prac3_islands.html#model-1-config-time",
    "title": "3  🏝️ Island Hopping",
    "section": "Model 1: Config Time ⏰",
    "text": "Model 1: Config Time ⏰\nload in a the m1 config\n\n# load config\nconf_m1 &lt;- create_input_config(\"configs/config_islands_simple_Day1Prac3_M1.R\")\n\n# list all main elements of the config file\nnames(conf_m1$gen3sis)\n\n[1] \"general\"        \"initialization\" \"dispersal\"      \"speciation\"    \n[5] \"mutation\"       \"ecology\"       \n\n# list all elements of the general section, i.e. the main settings and not so much on the eco-evolutionary processes\nnames(conf_m1$gen3sis$general)\n\n[1] \"random_seed\"                      \"start_time\"                      \n[3] \"end_time\"                         \"max_number_of_species\"           \n[5] \"max_number_of_coexisting_species\" \"end_of_timestep_observer\"        \n[7] \"trait_names\"                      \"environmental_ranges\"            \n[9] \"verbose\"                         \n\n# if you're game take a look at the whole thing - whats different to the South America example?\nconf_m1\n\n$gen3sis\n$gen3sis$general\n$gen3sis$general$random_seed\n[1] 666\n\n$gen3sis$general$start_time\n[1] 50\n\n$gen3sis$general$end_time\n[1] NA\n\n$gen3sis$general$max_number_of_species\n[1] 50000\n\n$gen3sis$general$max_number_of_coexisting_species\n[1] 20000\n\n$gen3sis$general$end_of_timestep_observer\nfunction (data, vars, config) \n{\n    save_species()\n}\n&lt;environment: 0x00000232c45fbce0&gt;\n\n$gen3sis$general$trait_names\n[1] \"dispersal\"    \"temp_mean\"    \"temp_width\"   \"start_island\"\n\n$gen3sis$general$environmental_ranges\nlist()\n\n$gen3sis$general$verbose\n[1] FALSE\n\n\n$gen3sis$initialization\n$gen3sis$initialization$initial_abundance\n[1] 1\n\n$gen3sis$initialization$create_ancestor_species\nfunction (landscape, config) \n{\n    co &lt;- landscape$coordinates\n    sp1 &lt;- co[which(co[, 1] &lt; 20 & co[, 2] &lt; 30), ]\n    sp2 &lt;- co[which(co[, 1] &gt; 20 & co[, 2] &lt; 30), ]\n    sp3 &lt;- co[which(co[, 1] &lt; 20 & co[, 2] &gt; 30), ]\n    sp4 &lt;- co[which(co[, 1] &gt; 20 & co[, 2] &gt; 30), ]\n    species_coords &lt;- list(sp1, sp2, sp3, sp4)\n    new_species &lt;- list()\n    new_species[[1]] &lt;- create_species(rownames(species_coords[[1]]), \n        config)\n    new_species[[1]]$traits[, \"dispersal\"] &lt;- 5\n    new_species[[1]]$traits[, \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[1]]), \n        \"mean_temp\"])\n    new_species[[1]]$traits[, \"temp_width\"] &lt;- 1\n    new_species[[1]]$traits[, \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[1]]), \n        \"patch\"])\n    new_species[[2]] &lt;- create_species(rownames(species_coords[[2]]), \n        config)\n    new_species[[2]]$traits[, \"dispersal\"] &lt;- 5\n    new_species[[2]]$traits[, \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[2]]), \n        \"mean_temp\"])\n    new_species[[2]]$traits[, \"temp_width\"] &lt;- 1\n    new_species[[2]]$traits[, \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[2]]), \n        \"patch\"])\n    new_species[[3]] &lt;- create_species(rownames(species_coords[[3]]), \n        config)\n    new_species[[3]]$traits[, \"dispersal\"] &lt;- 5\n    new_species[[3]]$traits[, \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[3]]), \n        \"mean_temp\"])\n    new_species[[3]]$traits[, \"temp_width\"] &lt;- 1\n    new_species[[3]]$traits[, \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[3]]), \n        \"patch\"])\n    new_species[[4]] &lt;- create_species(rownames(species_coords[[4]]), \n        config)\n    new_species[[4]]$traits[, \"dispersal\"] &lt;- 5\n    new_species[[4]]$traits[, \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[4]]), \n        \"mean_temp\"])\n    new_species[[4]]$traits[, \"temp_width\"] &lt;- 1\n    new_species[[4]]$traits[, \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[4]]), \n        \"patch\"])\n    return(new_species)\n}\n&lt;environment: 0x00000232c45fbce0&gt;\n\n\n$gen3sis$dispersal\n$gen3sis$dispersal$max_dispersal\n[1] Inf\n\n$gen3sis$dispersal$get_dispersal_values\nfunction (n, species, landscape, config) \n{\n    values &lt;- rexp(n, rate = 1/species$traits[, \"dispersal\"])\n    return(values)\n}\n&lt;environment: 0x00000232c45fbce0&gt;\n\n\n$gen3sis$speciation\n$gen3sis$speciation$divergence_threshold\n[1] 10\n\n$gen3sis$speciation$get_divergence_factor\nfunction (species, cluster_indices, landscape, config) \n{\n    return(1)\n}\n&lt;environment: 0x00000232c45fbce0&gt;\n\n\n$gen3sis$mutation\n$gen3sis$mutation$apply_evolution\nfunction (species, cluster_indices, landscape, config) \n{\n    trait_evolutionary_power &lt;- 0.01\n    traits &lt;- species[[\"traits\"]]\n    cells &lt;- rownames(traits)\n    trn &lt;- config$gen3sis$general$trait_names\n    for (cluster_index in unique(cluster_indices)) {\n        cells_cluster &lt;- cells[which(cluster_indices == cluster_index)]\n        mean_abd &lt;- mean(species$abundance[cells_cluster])\n        weight_abd &lt;- species$abundance[cells_cluster]/mean_abd\n        for (ti in trn) {\n            traits[cells_cluster, ti] &lt;- mean(traits[cells_cluster, \n                ti] * weight_abd)\n        }\n    }\n    mutation_deltas &lt;- rnorm(length(traits[, ti]), mean = 0, \n        sd = trait_evolutionary_power)\n    traits[, \"temp_mean\"] &lt;- traits[, \"temp_mean\"] + mutation_deltas\n    return(traits)\n}\n&lt;environment: 0x00000232c45fbce0&gt;\n\n\n$gen3sis$ecology\n$gen3sis$ecology$apply_ecology\nfunction (abundance, traits, landscape, config) \n{\n    diff &lt;- abs(traits[, \"temp_mean\"] - landscape[, \"mean_temp\"])\n    abundance[diff &gt; traits[, \"temp_width\"]] &lt;- 0\n    abundance[diff &lt;= traits[, \"temp_width\"]] &lt;- 1\n    return(abundance)\n}\n&lt;environment: 0x00000232c45fbce0&gt;\n\n\n\n$user\nlist()\n\n$directories\nlist()\n\nattr(,\"class\")\n[1] \"gen3sis_config\"\n\n\nOk now run the sim. Note that we’re usinga start time of 50 with 100-thousand-year time steps. So only the last 500 thousand years rather than the full 5 million. This is because\n\n# run simulation\nsim_m1 &lt;- run_simulation(config = \"configs/config_islands_simple_Day1Prac3_M1.R\", \n                      landscape = \"data/landscapes/islands\", \n                      output_directory = \"output/islands\")\n\nInvestigate the output\n\nsim_m1 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/sgen3sis.rds\")\n\n\n# visualize the outputs\nplot_summary(sim_m1)\n\n\n\n\n\n\n\n\n\n# plot richness from summary in custom fashion\nna_mask &lt;- is.na(lc$elevation[,\"0\"])\nrich_m1 &lt;- sim_m1$summary$`richness-final`\nrich_m1[na_mask,3] &lt;- NA\nplot(rast(rich_m1, type=\"xyz\"), main=\"Richness\")\n\n\n\n\n\n\n\n\nPick a couple of random time points to look at specifically.\n\n# plot richness at time step 32 using saved data\nsps32 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/species/species_t_32.rds\")\nlc32 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/landscapes/landscape_t_32.rds\")\nplot_richness(sps32, lc32)\n\n\n\n\n\n\n\n# plot richness at time step 12 using saved data\nsps12 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/species/species_t_12.rds\")\nlc12 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M1/landscapes/landscape_t_12.rds\")\nplot_richness(sps12, lc12)\n\n\n\n\n\n\n\n\nNow look at the phylogeny\n\n# Now lets look at the Phylogeny\nlibrary(ape)\n\n\nAttaching package: 'ape'\n\n\nThe following objects are masked from 'package:terra':\n\n    rotate, trans, zoom\n\nphy_m1 &lt;- read.nexus(\"output/islands/config_islands_simple_Day1Prac3_M1/phy.nex\")\nplot(phy_m1)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>🏝️ Island Hopping</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#model-2-customise",
    "href": "Day1_Prac3_islands.html#model-2-customise",
    "title": "3  🏝️ Island Hopping",
    "section": "Model 2: Customise 💅",
    "text": "Model 2: Customise 💅\nLets start changing features of the config and compare the outputs to our first model.\n\n# load in config M2\nconf_m2 &lt;- create_input_config(\"configs/config_islands_simple_Day1Prac3_M2.R\")\n\n# previously, in M1, populations need 10 time steps to complete speciation\nconf_m1$gen3sis$speciation$divergence_threshold\n\n[1] 10\n\n# now populations only need 5 time steps to complete speciation\nconf_m2$gen3sis$speciation$divergence_threshold\n\n[1] 5\n\n#We have also change the observer function to save the presence/absence matrix for each time step.\n# see original config\nconf_m1$gen3sis$general$end_of_timestep_observer \n\nfunction (data, vars, config) \n{\n    save_species()\n}\n&lt;environment: 0x00000232c45fbce0&gt;\n\n# see modeified config\nconf_m2$gen3sis$general$end_of_timestep_observer \n\nfunction (data, vars, config) \n{\n    save_species()\n}\n&lt;environment: 0x00000232d88aefb0&gt;\n\n\nRun M2!\n\n# run the new model\nsim_m2 &lt;- run_simulation(config=\"configs/config_islands_simple_Day1Prac3_M2.R\", landscape=\"data/landscapes/islands\", output_directory=\"output/islands\")\n\n\n# original dynamics\nplot_summary(sim_m1)\n\n\n\n\n\n\n\n# modified dynamics\nsim_m2 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M2/sgen3sis.rds\")\nplot_summary(sim_m2)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>🏝️ Island Hopping</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#model-3-specialise",
    "href": "Day1_Prac3_islands.html#model-3-specialise",
    "title": "3  🏝️ Island Hopping",
    "section": "Model 3: Specialise🏝️",
    "text": "Model 3: Specialise🏝️\nThe differences between M1 and M2 are predictable. Speciation happens a bit faster in M2, and you end up with more species. Overall, however, the patterns of richness are pretty similar. This suggests that this change in the rate of speciation isn’t having a big impact on geographic variation in where species are forming (at least from a glance). So let’s try a new model that has a few more tweaks to see a more measurable effect.\n\n#load in the config for model M3\nconf_m3 &lt;- create_input_config(\"configs/config_islands_simple_Day1Prac3_M3.R\")\n\n# take a look at the initialisation\nconf_m3$gen3sis$initialization\n\n$initial_abundance\n[1] 1\n\n$create_ancestor_species\nfunction (landscape, config) \n{\n    co &lt;- landscape$coordinates\n    sp1 &lt;- co[which(co[, 1] &gt; 20 & co[, 2] &gt; 30), ]\n    sp2 &lt;- co[which(co[, 1] &lt; 20 & co[, 2] &lt; 30), ]\n    sp3 &lt;- co[which(co[, 1] &gt; 20 & co[, 2] &lt; 30), ]\n    sp4 &lt;- co[which(co[, 1] &lt; 20 & co[, 2] &gt; 30), ]\n    species_coords &lt;- list(sp1, sp2, sp3, sp4)\n    new_species &lt;- list()\n    new_species[[1]] &lt;- create_species(rownames(species_coords[[1]]), \n        config)\n    new_species[[1]]$traits[, \"dispersal\"] &lt;- 10\n    new_species[[1]]$traits[, \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[1]]), \n        \"mean_temp\"])\n    new_species[[1]]$traits[, \"temp_width\"] &lt;- 0.5\n    new_species[[1]]$traits[, \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[1]]), \n        \"patch\"])\n    new_species[[2]] &lt;- create_species(rownames(species_coords[[2]]), \n        config)\n    new_species[[2]]$traits[, \"dispersal\"] &lt;- 7.5\n    new_species[[2]]$traits[, \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[2]]), \n        \"mean_temp\"])\n    new_species[[2]]$traits[, \"temp_width\"] &lt;- 1\n    new_species[[2]]$traits[, \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[2]]), \n        \"patch\"])\n    new_species[[3]] &lt;- create_species(rownames(species_coords[[3]]), \n        config)\n    new_species[[3]]$traits[, \"dispersal\"] &lt;- 5\n    new_species[[3]]$traits[, \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[3]]), \n        \"mean_temp\"])\n    new_species[[3]]$traits[, \"temp_width\"] &lt;- 2\n    new_species[[3]]$traits[, \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[3]]), \n        \"patch\"])\n    new_species[[4]] &lt;- create_species(rownames(species_coords[[4]]), \n        config)\n    new_species[[4]]$traits[, \"dispersal\"] &lt;- 2.5\n    new_species[[4]]$traits[, \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[4]]), \n        \"mean_temp\"])\n    new_species[[4]]$traits[, \"temp_width\"] &lt;- 4\n    new_species[[4]]$traits[, \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[4]]), \n        \"patch\"])\n    return(new_species)\n}\n&lt;environment: 0x00000232cb6add78&gt;\n\n\nThere is a big differences here. In the initialization stage we give each species a different value of it’s dispersal ability and temperature width trait (niche breadth), and these are inversely related - high dispersing species have narrow niche breadths and low dispering species have wide niche breadths. This may create an interesting trade-off in dynamics of island colonization.\nRun the simulation\n\nsim_m3 &lt;- run_simulation(config=\"configs/config_islands_simple_Day1Prac3_M3.R\", \n                         landscape=\"data/landscapes/islands\",\n                         output_directory=\"output/islands\")\n\nNow compare the dynamics\n\nsim_m3 &lt;- readRDS(\"output/islands/config_islands_simple_Day1Prac3_M3/sgen3sis.rds\")\n\n# compare the plot summaries\nplot_summary(sim_m1)\n\n\n\n\n\n\n\nplot_summary(sim_m2)\n\n\n\n\n\n\n\nplot_summary(sim_m3)\n\n\n\n\n\n\n\n\n\n# lets also compare the phylogenies\npar(mfrow=c(1,3))\nphy_m1 &lt;- read.nexus(\"output/islands/config_islands_simple_Day1Prac3_M1/phy.nex\")\nplot(phy_m1)\nphy_m2 &lt;- read.nexus(\"output/islands/config_islands_simple_Day1Prac3_M2/phy.nex\")\nplot(phy_m2)\nphy_m3 &lt;- read.nexus(\"output/islands/config_islands_simple_Day1Prac3_M3/phy.nex\")\nplot(phy_m3)\n\n\n\n\n\n\n\n\n\nExercise\nFrom the small tweak to the divergence factor and the initial conditions, we can see more species being generated in M2 and M3 compared to M1. We can also see extremely asymmetrical trees.\nReview the M2 and M3 config files and try to understand what they’re doing.\n\nHow are the dynamics through time in M2 and M3 different to M1, and how are they similar?\nAre the original occupants of each island diversifying at the same pace? How could you test this?\nConsider how you might modify the configuration or apply it to a specific research question.\nDo you think all islands would have similar degrees of phylogenetic diversity or turnover?\n\nWe’ll explore some of these questions tomorrow!",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>🏝️ Island Hopping</span>"
    ]
  },
  {
    "objectID": "Day1_Prac3_islands.html#model-4-real",
    "href": "Day1_Prac3_islands.html#model-4-real",
    "title": "3  🏝️ Island Hopping",
    "section": "Model 4: Real👀",
    "text": "Model 4: Real👀\nIf you’ve managed to get thorugh all of this, run M4 config and using what you’ve learned, plot some of the outputs. What has changed about this config?\n\nsim_m4 &lt;- run_simulation(config=\"configs/config_islands_simple_Day1Prac3_M4.R\", landscape=\"data/landscapes/islands\", output_directory=\"output/islands\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>🏝️ Island Hopping</span>"
    ]
  },
  {
    "objectID": "index.html#day-1.",
    "href": "index.html#day-1.",
    "title": "Center for Biodiversity Analysis: Gen3sis Workshop 2024",
    "section": "Day 1.",
    "text": "Day 1.\n\n09:00 - Welcome (Platypus Room) - Introductions and Overview of Gen3sis Workshop\n09:45 - Lecture 1. Oskar Hagen (Eucalyptus Room) - History and philosophy of simulation modelling in biodiversity studies\n10:45 - Coffee Break\n11:00 - Practical 1. Installation and Set Up (30mins - 1hr)\n12:00 - Practical 2. Gen3sis Config Basics\n12:30 - Lunch Break\n13:30 - Practical 2. Gen3sis Config Basics (continue - 2hrs)\n15:30 - Coffee Break\n15:45 - Practical 3. Explore island configs\n16:30 - Questions / Wrap up Day 1",
    "crumbs": [
      "Program"
    ]
  },
  {
    "objectID": "index.html#day.-2",
    "href": "index.html#day.-2",
    "title": "Center for Biodiversity Analysis: Gen3sis Workshop 2024",
    "section": "Day. 2",
    "text": "Day. 2\n\n09:00 - Lecture 2. Alex and Oskar (Platypus Room) - Inference from simulated biodiversity data\n10:00 - Practical 4.1. Gen3sis outputs and biodiversity patterns\n10:30 - Coffee Break\n10:45 - Practical 4.2 Gen3sis outputs and biodiversity patterns (contd.)\n12:30 - lunch\n13:30 - Lecture 3. Tristan Salles (Platypus Room) - Paleoenvironmental models and data\n14:15 - Discussion\n14:45 - Coffee break\n15:00 - Practical 5. Modifying landscapes for Gen3sis\n16:30 - Questions / Wrap up Day 2",
    "crumbs": [
      "Program"
    ]
  },
  {
    "objectID": "index.html#day-3.",
    "href": "index.html#day-3.",
    "title": "Center for Biodiversity Analysis: Gen3sis Workshop 2024",
    "section": "Day 3.",
    "text": "Day 3.\n\n09:00 - Lecture 4. Alex and Oskar - Designing simulation experiments with Gen3sis\n10:00 - Group work - implementing models in Gen3sis\n10:30 - Coffee Break\n10:45 - Group work - implementing models in Gen3sis (contd.)\n12:30 - Lunch break\n13:30 - Wrapping up Group work\n14:45 - Coffee Break\n15:00 - Presenting models / Wrap up Day 3\n16:00 - Pub!",
    "crumbs": [
      "Program"
    ]
  },
  {
    "objectID": "Day2_Prac4_outputs.html#exploring-outputs",
    "href": "Day2_Prac4_outputs.html#exploring-outputs",
    "title": "4  🖥️ Silicodiversity",
    "section": "",
    "text": "A map of Species Richness from the simulation summary object\nA plot of Lineages Through Time from the phylogeny\nPlot of species trait values on a phylogenetic tree, by linking the species objects to the phylogeny\nMaps of Phylogenetic Diversity by linking species objects to the landscape and phylogeny\n\n\n\n\nSimulation summary object (sgen3sis.rds)\nThe first object we will look at today is the sgenesis.rds file. This file contains a summary of the simulation. Which we can plot (as we did yesterday) with the plot_summary function.\n\noutput_dir &lt;- \"output/islands\" \n\nsim &lt;- readRDS(file.path(output_dir, \"config_islands_simple_Day1Prac3_M1/sgen3sis.rds\")) \n\n# look at what the simulation summary contains\nnames(sim) \n\n[1] \"summary\"    \"flag\"       \"system\"     \"parameters\"\n\n\nThe first element is the sim summary. This conatins a record of the history of speciation, extinction, and species richness through time (phylo_summary), a history of the number of total grid cells occupied during the simulation through time (occupancy) and the species richness of each grid cell at the final time step.\n\nstr(sim$summary)\n\nList of 3\n $ phylo_summary : num [1:52, 1:4] 4 4 4 4 4 4 4 4 4 4 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : chr [1:52] \"initial\" \"50\" \"49\" \"48\" ...\n  .. ..$ : chr [1:4] \"total\" \"alive\" \"speciations\" \"extinctions\"\n $ occupancy     : Named num [1:52] 1 0.382 0.39 0.365 0.358 ...\n  ..- attr(*, \"names\")= chr [1:52] \"initial\" \"50\" \"49\" \"48\" ...\n $ richness-final: num [1:3600, 1:3] 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : chr [1:3600] \"1\" \"2\" \"3\" \"4\" ...\n  .. ..$ : chr [1:3] \"x\" \"y\" \"0\"\n\n# phylo summary\nhead(sim$summary$phylo_summary)\n\n        total alive speciations extinctions\ninitial     4     4           4           0\n50          4     4           0           0\n49          4     4           0           0\n48          4     4           0           0\n47          4     4           0           0\n46          4     4           0           0\n\n# occupancy\nhead(sim$summary$occupancy)\n\n  initial        50        49        48        47        46 \n1.0000000 0.3821464 0.3897485 0.3650047 0.3584392 0.3333333 \n\n# occupancy\nhead(sim$summary$`richness-final`)\n\n    x    y 0\n1 0.5 59.5 0\n2 1.5 59.5 0\n3 2.5 59.5 0\n4 3.5 59.5 0\n5 4.5 59.5 0\n6 5.5 59.5 0\n\n\nThese data are called on in the plot_summary function\n\n# Visualize the outputs \nplot_summary(sim) \n\n\n\n\n\n\n\n\nWe can also use these data to map out patterns of species richness\n\n# make sure the landscape is loaded\nlc &lt;- readRDS(file.path(\"data\", \"landscapes\", \"islands\",\"landscapes.rds\"))\n\n# can remove cells with elevation below sea level at timestep 0 (present-day) to see the outlines of the islands\nna_mask &lt;- is.na(lc$elevation[,\"0\"])\nrich &lt;- sim$summary$`richness-final`\nrich[na_mask,3] &lt;- NA\n\n# turn richness summary into a raster \nrichness &lt;- rast(rich, type=\"xyz\")\n\n# plot\nplot(richness, col=c(\"grey\", gen3sis::color_richness(12)))\n\n\n\n\n\n\n\n\nThe next part of the simulation summary object is the flag which will tell us if the simulation ran successfully. It should give “OK”\n\nsim$flag\n\n[1] \"OK\"\n\n\nNext is the system summary. This is information about the R version, R packages, and operating system used in the simulation. This ensures complete repeatability. It also tells us the runtime of the simulation.\n\nsim$system\n\n$`runtime-hours`\n[1] 0.04024773\n\n$`gen3sis-version`\n[1] '1.5.11'\n\n$`R-version`\n               _                                \nplatform       x86_64-w64-mingw32               \narch           x86_64                           \nos             mingw32                          \ncrt            ucrt                             \nsystem         x86_64, mingw32                  \nstatus                                          \nmajor          4                                \nminor          2.2                              \nyear           2022                             \nmonth          10                               \nday            31                               \nsvn rev        83211                            \nlanguage       R                                \nversion.string R version 4.2.2 (2022-10-31 ucrt)\nnickname       Innocent and Trusting            \n\n$OS\n  sysname \n\"Windows\" \n\n$`session-information`\nR version 4.2.2 (2022-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] paleotree_3.4.5    diversitree_0.10-0 picante_1.8.2      nlme_3.1-160      \n [5] vegan_2.6-4        lattice_0.20-45    permute_0.9-7      phytools_2.1-1    \n [9] maps_3.4.1         ape_5.7-1          raster_3.6-26      sp_2.1-4          \n[13] terra_1.7-29       gen3sis_1.5.11    \n\nloaded via a namespace (and not attached):\n [1] phangorn_2.11.1         deSolve_1.35            subplex_1.8            \n [4] xfun_0.47               gdistance_1.6.4         splines_4.2.2          \n [7] vctrs_0.6.0             generics_0.1.3          expm_0.999-7           \n[10] mgcv_1.8-42             optimParallel_1.0-2     rlang_1.1.3            \n[13] glue_1.6.2              foreach_1.5.2           lifecycle_1.0.4        \n[16] stringr_1.5.1           combinat_0.0-8          codetools_0.2-19       \n[19] coda_0.19-4.1           knitr_1.48              doParallel_1.0.17      \n[22] parallel_4.2.2          Rcpp_1.0.10             clusterGeneration_1.3.8\n[25] jsonlite_1.8.8          scatterplot3d_0.3-44    fastmatch_1.1-3        \n[28] mnormt_2.1.1            png_0.1-8               digest_0.6.31          \n[31] stringi_1.7.12          numDeriv_2016.8-1.1     grid_4.2.2             \n[34] bitops_1.0-7            quadprog_1.5-8          cli_3.6.0              \n[37] tools_4.2.2             magrittr_2.0.3          RCurl_1.98-1.12        \n[40] cluster_2.1.4           pkgconfig_2.0.3         MASS_7.3-58.3          \n[43] Matrix_1.6-5            rstudioapi_0.14         iterators_1.0.14       \n[46] igraph_2.0.3            compiler_4.2.2         \n\n\nFinally the summary object contains the config infromation and model parameters used.\n\nsim$parameters\n\n$gen3sis\n$gen3sis$general\n$gen3sis$general$random_seed\n[1] 666\n\n$gen3sis$general$start_time\n[1] 50\n\n$gen3sis$general$end_time\n[1] 0\n\n$gen3sis$general$max_number_of_species\n[1] 50000\n\n$gen3sis$general$max_number_of_coexisting_species\n[1] 20000\n\n$gen3sis$general$end_of_timestep_observer\nfunction(data, vars, config){\n  plot_richness(data$all_species, data$landscape)\n  save_species() # saves a species and landscape objects for desired timesteps\n}\n&lt;environment: 0x000001f7d5c74ac0&gt;\n\n$gen3sis$general$trait_names\n[1] \"dispersal\"    \"temp_mean\"    \"temp_width\"   \"start_island\"\n\n$gen3sis$general$environmental_ranges\nlist()\n\n$gen3sis$general$verbose\n[1] 1\n\n\n$gen3sis$initialization\n$gen3sis$initialization$initial_abundance\n[1] 1\n\n$gen3sis$initialization$create_ancestor_species\nfunction(landscape, config) {\n  # browser()\n  co &lt;- landscape$coordinates\n  sp1 &lt;- co[which(co[,1]&lt;20&co[,2]&lt;30),]\n  sp2 &lt;- co[which(co[,1]&gt;20&co[,2]&lt;30),]\n  sp3 &lt;- co[which(co[,1]&lt;20&co[,2]&gt;30),]\n  sp4 &lt;- co[which(co[,1]&gt;20&co[,2]&gt;30),]\n  \n  species_coords &lt;- list(sp1,\n                         sp2,\n                         sp3,\n                         sp4)\n  new_species &lt;- list()\n  \n  # Species 1 - high dispersal, low niche breadth\n  new_species[[1]] &lt;- create_species(rownames(species_coords[[1]]), config)\n  new_species[[1]]$traits[ , \"dispersal\"] &lt;- 5\n  new_species[[1]]$traits[ , \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[1]]), \"mean_temp\"])\n  new_species[[1]]$traits[ , \"temp_width\"] &lt;- 1\n  new_species[[1]]$traits[ , \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[1]]), \"patch\"])\n  \n  # Species 2 - medium-high dispersal, medium-low niche breadth\n  new_species[[2]] &lt;- create_species(rownames(species_coords[[2]]), config)\n  new_species[[2]]$traits[ , \"dispersal\"] &lt;- 5\n  new_species[[2]]$traits[ , \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[2]]), \"mean_temp\"])\n  new_species[[2]]$traits[ , \"temp_width\"] &lt;- 1\n  new_species[[2]]$traits[ , \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[2]]), \"patch\"])\n  \n  # Species 3 - medium-low dispersal, medium-high niche breadth\n  new_species[[3]] &lt;- create_species(rownames(species_coords[[3]]), config)\n  new_species[[3]]$traits[ , \"dispersal\"] &lt;- 5\n  new_species[[3]]$traits[ , \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[3]]), \"mean_temp\"])\n  new_species[[3]]$traits[ , \"temp_width\"] &lt;- 1\n  new_species[[3]]$traits[ , \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[3]]), \"patch\"])\n  \n  # Species 4 -low dispersal,high niche breadth\n  new_species[[4]] &lt;- create_species(rownames(species_coords[[4]]), config)\n  new_species[[4]]$traits[ , \"dispersal\"] &lt;- 5\n  new_species[[4]]$traits[ , \"temp_mean\"] &lt;- mean(landscape$environment[rownames(species_coords[[4]]), \"mean_temp\"])\n  new_species[[4]]$traits[ , \"temp_width\"] &lt;- 1\n  new_species[[4]]$traits[ , \"start_island\"] &lt;- unique(landscape$environment[rownames(species_coords[[4]]), \"patch\"])\n  return(new_species)\n}\n&lt;environment: 0x000001f7d5c74ac0&gt;\n\n\n$gen3sis$dispersal\n$gen3sis$dispersal$max_dispersal\n[1] Inf\n\n$gen3sis$dispersal$get_dispersal_values\nfunction(n, species, landscape, config){\n  values &lt;- rexp(n, rate = 1/species$traits[,\"dispersal\"])\n  return(values)\n}\n&lt;environment: 0x000001f7d5c74ac0&gt;\n\n\n$gen3sis$speciation\n$gen3sis$speciation$divergence_threshold\n[1] 10\n\n$gen3sis$speciation$get_divergence_factor\nfunction(species, cluster_indices, landscape, config) {\n  return(1)\n}\n&lt;environment: 0x000001f7d5c74ac0&gt;\n\n\n$gen3sis$mutation\n$gen3sis$mutation$apply_evolution\nfunction(species, cluster_indices, landscape, config) {\n  # cell names\n  trait_evolutionary_power &lt;-0.01\n  traits &lt;- species[[\"traits\"]]\n  cells &lt;- rownames(traits)\n  #homogenize trait based on abundance\n  # Homogenize all traits by weighted abundance, attention, exclude here any trait that should be more neutral\n  trn &lt;- config$gen3sis$general$trait_names\n  for(cluster_index in unique(cluster_indices)){\n    # cluster_index &lt;- 1\n    cells_cluster &lt;- cells[which(cluster_indices == cluster_index)]\n    # hist(traits[cells_cluster, \"temp\"], main=\"before\")\n    mean_abd &lt;- mean(species$abundance[cells_cluster])\n    weight_abd &lt;- species$abundance[cells_cluster]/mean_abd\n    for (ti in trn){\n      traits[cells_cluster, ti] &lt;- mean(traits[cells_cluster, ti]*weight_abd)\n    }\n    # hist(traits[cells_cluster, \"temp\"], main=\"after\")\n  }\n  \n  # mutate mean temperature\n  mutation_deltas &lt;-rnorm(length(traits[, ti]), mean=0, sd=trait_evolutionary_power)\n  traits[, \"temp_mean\"] &lt;- traits[, \"temp_mean\"] + mutation_deltas\n  return(traits)\n}\n&lt;environment: 0x000001f7d5c74ac0&gt;\n\n\n$gen3sis$ecology\n$gen3sis$ecology$apply_ecology\nfunction(abundance, traits, landscape, config) {\n  # get the difference between species and site mean temp\n  diff &lt;- abs(traits[, \"temp_mean\"]-landscape[,\"mean_temp\"])\n  # set the abundance of species with a difference in mean temp larger than the species temp width to zero and the ones below to one\n  abundance[diff&gt;traits[,\"temp_width\"]] &lt;- 0\n  abundance[diff&lt;=traits[,\"temp_width\"]] &lt;- 1\n  return(abundance)\n}\n&lt;environment: 0x000001f7d5c74ac0&gt;\n\n\n\n$user\nlist()\n\n$directories\n$directories$input\n[1] \"data/landscapes/islands\"\n\n$directories$output\n[1] \"output/islands/config_islands_simple_Day1Prac3_M1\"\n\n$directories$output_plots\n[1] \"output/islands/config_islands_simple_Day1Prac3_M1/plots\"\n\n\nattr(,\"class\")\n[1] \"gen3sis_config\"\n\n\n\n\nPhylogeny object (phy.nex)\nThe phylogeny object is pretty straight forward. It is a newxus file containing the relationships between the species.\n\n# read phy\nphy &lt;- read.nexus(file.path(output_dir, \"config_islands_simple_Day1Prac3_M1/phy.nex\"))\n\n# plot phy\nplot(phy)\n\n\n\n\n\n\n\n\nFrom this object we can look at lineages through time plots and estimate trends in diversification, such as using the gamma statistic to detect diversification slowdowns or speedups.\n\n# plot an ltt\nltt_M1 &lt;-ltt(phy)\n\n\n\n\n\n\n\n# look at the gamma statistic\nprint(paste0(\"Gamma = \", round(ltt_M1$gamma, 2)))\n\n[1] \"Gamma = 0.88\"\n\n# is there a significant deviation from conatant rates?\nprint(paste0(\"P = \", round(ltt_M1$p, 2)))\n\n[1] \"P = 0.38\"\n\n\n\n\nSpecies objects (phy.nex)\nNow its time to get into the meat of the gen3sis outputs. Most of the infromation from the simulation is stored in the species objects. These are .rds files that contain a list which includes information on every species, extinct or extant, that existed during the simulation. We saved these at every time step. The naming convention is “species_t_0.rds” for time step 0 (present-day), and “species_t_50” for timestep 50, etc.\n\n# load object\nspecies_t_0 &lt;- readRDS(file.path(output_dir, \"config_islands_simple_Day1Prac3_M1\", \"species\", \"species_t_0.rds\"))\n\n# look at object class and length\nclass(species_t_0)\n\n[1] \"list\"\n\nlength(species_t_0)\n\n[1] 14\n\n# compare to number of tips in the phylogeny\nNtip(phy)\n\n[1] 14\n\n\nWe can see there are 14 elements in the list, representing our 14 species and this number matches the number of species in our phylogeny. No species went extinct in this particular simulation, but if they did, they would match extinct tips in the phylogeny.\nLets look at a single species\n\nnames(species_t_0[[1]])\n\n[1] \"id\"         \"abundance\"  \"traits\"     \"divergence\"\n\n\nThe species has an ID which allows us to match it to the phylogeny.\n\nspecies_t_0[[1]]$id\n\n[1] \"1\"\n\n\nThe species also has its abundances, which are linked to grid cells in the landscape which can matched with their names.\n\nspecies_t_0[[1]]$abundance\n\n2767 2768 2769 2770 2771 2772 2773 2826 2827 2828 2830 2831 2832 2833 2886 2887 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2891 2892 2893 2894 2895 2945 2946 2953 2954 2955 3004 3005 3015 3016 3063 3064 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n3076 3124 3125 3135 3136 3184 3185 3194 3195 3196 3245 3246 3254 3255 3305 3306 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n3307 3308 3312 3313 3314 3367 3368 3369 3370 3371 3372 3373 3429 3430 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n\n\nIn this case the species has abundance values of 1 in all populations from the cells that it occupies. Thyis is because we set abundances to be binary: 1=present, 0=absent. We can see the species occupies cells 2767,2768,2769, etc.\nThe species also has values of it’s traits for each of those populations.\n\nhead(species_t_0[[1]]$traits)\n\n     dispersal temp_mean temp_width start_island\n2767         5  21.12272          1            3\n2768         5  21.12585          1            3\n2769         5  21.11691          1            3\n2770         5  21.11051          1            3\n2771         5  21.10409          1            3\n2772         5  21.09060          1            3\n\n\nWe can see the population that each row is linked to by the rownames. Here you can see 2767, 2768, 2769, etc. These each have a dispersal trait of 5 (because we didn;t vary this) slightly different temp_mean traits (because these evolved stochastically under a Brownian motion like model) and a temp width of 1 (again, we didn;t vary this in model 1).\nSo, if we want to map out the distribution of species 1 at timestep 0, we just need to link those cell names (267/268/etc) to the landscape object and make a raster. Why don;t we try and see what islands species 1 is found on.\n\npar(mfrow=c(1,2))\n\n# first plot the sialnds out from the landscape objet\npatch_xyz &lt;- rast(lc$patch[,c(\"x\", \"y\", \"0\")], type=\"xyz\")\nplot(patch_xyz, main=\"Island Patches\", col=palette()[c(2,3,4,6)])\n\n# pull out values of the landscape where the species is found\nspecies1_xyz &lt;- lc$patch[which(rownames(lc$patch) %in% rownames(species_t_0[[1]]$traits)), c(\"x\", \"y\", \"0\")]\n\n# turn it into a raster\nspecies1_xyz &lt;- rast(species1_xyz, type=\"xyz\")\nspecies1_xyz &lt;- extend(species1_xyz, patch_xyz)\nplot(species1_xyz, main= \"Species 1 Distribution\")\n\n\n\n\n\n\n\n\n\n\nLinking the species object and phylogeny\nLets try and link the species trait data to the phylogeny to start learning something about what exactly took place during our simulation! Let’s get the mean trait value of the temperature niche and also the islands that each species belongs too.\n\n# lets create a data frame\ndf &lt;- data.frame(\"id\"= paste0(\"species\",sapply(species_t_0, function(x)x$id)),\n                 \"mean_temp\"=NA,\n                 \"island1\"=0,\n                 \"island2\"=0,\n                 \"island3\"=0,\n                 \"island4\"=0, \n                 \"island_start\"=NA)\n\n# take a look\nhead(df)\n\n        id mean_temp island1 island2 island3 island4 island_start\n1 species1        NA       0       0       0       0           NA\n2 species2        NA       0       0       0       0           NA\n3 species3        NA       0       0       0       0           NA\n4 species4        NA       0       0       0       0           NA\n5 species5        NA       0       0       0       0           NA\n6 species6        NA       0       0       0       0           NA\n\n# Use sapply on the species object to get their mean trait values\ndf$mean_temp &lt;- sapply(species_t_0, function(x)mean(x$traits[, \"temp_mean\"], na.rm=T))\n\n# to get the island patch id values we'll use a for loop\nfor(i in 1:length(species_t_0)){\n  \n  # as before we get the lanscape values of each species\n  speciesi_xyz &lt;- lc$patch[which(rownames(lc$patch) %in% rownames(species_t_0[[i]]$traits)), c(\"x\", \"y\", \"0\")]\n  \n  # then pull out the unique values (note that species might occur on more than one island)\n  islands &lt;- unique(speciesi_xyz[, 3])\n  \n  # then if species are on the island, give that column a value of 1\n  df$island1[i] &lt;- ifelse(1 %in% islands, 1, 0)\n  df$island2[i] &lt;- ifelse(2 %in% islands, 1, 0)\n  df$island3[i] &lt;- ifelse(3 %in% islands, 1, 0)\n  df$island4[i] &lt;- ifelse(4 %in% islands, 1, 0)\n}\n\n# get the starting island from the traits object because we recorded this in the initialisation step\ndf$island_start &lt;- sapply(species_t_0, function(x) unique(x$traits[, \"start_island\"]))\n\nNow look again at the data frame\n\nhead(df)\n\n        id mean_temp island1 island2 island3 island4 island_start\n1 species1  21.11335       0       0       1       0     3.000000\n2 species2  21.99631       0       0       0       1     4.000000\n3 species3  20.46238       1       1       0       0     1.000000\n4 species4  21.32327       1       0       0       0     1.485038\n5 species5  21.32634       1       0       0       0     1.485038\n6 species6  20.48675       1       0       0       0     1.000000\n\n\nPlot out the continuously evolving temperature niche trait\n\n# create a named vector for the log of the temperature niche trait\ntemp_niche &lt;- log(df$mean_temp)\nnames(temp_niche) &lt;- df$id\n\n# plot it out with dots = trait\ndotTree(phy,temp_niche,ftype=\"i\")\n\n\n\n\n\n\n\n\nNot much variation in that trait, due to the combined effects of trait homogenisation and a low rate of change. Lets plot the tip states of the islands on the phylogeny using the phytools package\n\n# format each island\nformatIsland &lt;- function(island, phy=phy){\n  islandf &lt;- as.factor(df[, island])\n  names(islandf) &lt;- df$id\n  islandmat&lt;-to.matrix(islandf,levels(islandf))\n  islandmat&lt;-islandmat[phy$tip.label,]\n  return(list(islandf, islandmat))\n}\n\n\nplotTree(phy,ftype=\"i\",offset=1,fsize=0.9, xlim=c(0, 75))\n\ntiplabels(pie=formatIsland(island=\"island1\", phy=phy)[[2]],piecol=palette()[c(8,2)],cex=0.6, adj=12+1)\ntiplabels(pie=formatIsland(island=\"island2\", phy=phy)[[2]],piecol=palette()[c(8,3)],cex=0.6, adj=12+3)\ntiplabels(pie=formatIsland(island=\"island3\", phy=phy)[[2]],piecol=palette()[c(8,4)],cex=0.6, adj=12+5)\ntiplabels(pie=formatIsland(island=\"island4\", phy=phy)[[2]],piecol=palette()[c(8,6)],cex=0.6, adj=12+7)\n\n\n\n\n\n\n\n\nInteresting. What do you notice about the distribution of species on islands? Could you predict which island each lineage began on?\nWe actually know which islands each lineage started on because we recorded this as a trait (we could also look at the past species objects to figure this out but we have used a short cut method).\n\npar(mfrow=c(1,2))\nplotTree(phy,ftype=\"i\",offset=1,fsize=0.4, xlim=c(0, 75))\n\ntiplabels(pie=formatIsland(island=\"island1\", phy=phy)[[2]],piecol=palette()[c(8,2)],cex=0.6, adj=12+1)\ntiplabels(pie=formatIsland(island=\"island2\", phy=phy)[[2]],piecol=palette()[c(8,3)],cex=0.6, adj=12+3)\ntiplabels(pie=formatIsland(island=\"island3\", phy=phy)[[2]],piecol=palette()[c(8,4)],cex=0.6, adj=12+5)\ntiplabels(pie=formatIsland(island=\"island4\", phy=phy)[[2]],piecol=palette()[c(8,6)],cex=0.6, adj=12+7)\n# add the starting island as a fifth colum\ntiplabels(pie=formatIsland(island=\"island_start\", phy=phy)[[2]],piecol=palette()[c(2,3,4,6)],cex=0.6, adj=12+9)\n\n# add island plot\nplot(patch_xyz, main=\"Island Patches\", col=palette()[c(2,3,4,6)])\n\n\n\n\n\n\n\n\nSo whats really apparent here is that the clade that originated on the green island has speciated allopatrically into the red island multiple times in the recent past. The same is true fro the red clade, however the deeper divergence between species9 and species3 have had enough time to recolonise both islands.\n\n\n4.0.0.1 Linking the species object, landscape, and phylogeny\nCommon spatial biodiversity analyses link information measured at the species level to maps of their distribution in space using presence-absence matrices or PAMs. PAMs typically are data frame with each row representing a site, could be an island or could be a grid cell, and each column representing a species. Values of 1 are given if the species is present in the site, if not a value of 0 is given.\n\n# grid cell level PAM\n\n# create an empty data frame with the dimensions of species x sites\nPAM &lt;- data.frame(matrix(0, nrow=nrow(lc$elevation), ncol=length(species_t_0)))\n\n# given names to rows and columns\nrownames(PAM) &lt;- rownames(lc$elevation)\ncolnames(PAM) &lt;- paste0(\"species\", sapply(species_t_0, function(x)x$id))\n\n# loop over species and add value of 1 to all sites the species is present\nfor(i in 1:length(species_t_0)){\n  \n  PAM[which(rownames(PAM) %in% names(species_t_0[[i]]$abundance)), i] &lt;- 1\n}\n\n# how does it look?\nprint(PAM[1:10, 1:10])\n\n   species1 species2 species3 species4 species5 species6 species7 species8\n1         0        0        0        0        0        0        0        0\n2         0        0        0        0        0        0        0        0\n3         0        0        0        0        0        0        0        0\n4         0        0        0        0        0        0        0        0\n5         0        0        0        0        0        0        0        0\n6         0        0        0        0        0        0        0        0\n7         0        0        0        0        0        0        0        0\n8         0        0        0        0        0        0        0        0\n9         0        0        0        0        0        0        0        0\n10        0        0        0        0        0        0        0        0\n   species9 species10\n1         0         0\n2         0         0\n3         0         0\n4         0         0\n5         0         0\n6         0         0\n7         0         0\n8         0         0\n9         0         0\n10        0         0\n\n\n\n# we can estimate Phylogenetic diversity\npd_islands &lt;- pd(PAM, phy)\n\n# we can also measure mean phylogenetic distance and mean nearest neighbour distance\nmpd_islands &lt;- mpd(PAM, cophenetic(phy))\nmntd_islands &lt;- mntd(PAM,cophenetic(phy))\n\n# link these back back with the landscape by joining to the lanscape lat/lons\ncommunity_phylo &lt;- cbind(lc$elevation[, c(\"x\", \"y\")], pd_islands, mpd_islands, mntd_islands)\n\npar(mfrow=c(2,2))\nsr_ras &lt;- rast(community_phylo[, c(\"x\", \"y\", \"SR\")], type=\"xyz\")\npd_ras &lt;- rast(community_phylo[, c(\"x\", \"y\", \"PD\")], type=\"xyz\")\nmpd_ras &lt;- rast(community_phylo[, c(\"x\", \"y\", \"mpd_islands\")], type=\"xyz\")\nmntd_ras &lt;- rast(community_phylo[, c(\"x\", \"y\", \"mntd_islands\")], type=\"xyz\")\n\nplot(sr_ras, main=\"Species Richness\")\nplot(pd_ras, main=\"Phylogenetic Diversity\")\nplot(mpd_ras, main=\"Mean Phylogenetic Pairwise Distance\")\nplot(mntd_ras, main= \"Mean Nearest Neighbour Phylogenetic Distance\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>🖥️ Silicodiversity</span>"
    ]
  },
  {
    "objectID": "Day2_Prac4_outputs.html#sensitivity-analysis",
    "href": "Day2_Prac4_outputs.html#sensitivity-analysis",
    "title": "4  🖥️ Silicodiversity",
    "section": "Sensitivity analysis",
    "text": "Sensitivity analysis",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>🖥️ Silicodiversity</span>"
    ]
  }
]